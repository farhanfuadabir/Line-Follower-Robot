
LFR_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001454  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00001454  000014e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002e  00800078  00800078  00001500  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001500  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001530  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  0000156c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001aee  00000000  00000000  000016fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b9  00000000  00000000  000031ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000136c  00000000  00000000  00003ba3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a0  00000000  00000000  00004f10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b2  00000000  00000000  000052b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c27  00000000  00000000  00005a62  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00006689  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 a7 07 	jmp	0xf4e	; 0xf4e <__vector_1>
       8:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__vector_2>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 25 08 	jmp	0x104a	; 0x104a <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e5       	ldi	r30, 0x54	; 84
      68:	f4 e1       	ldi	r31, 0x14	; 20
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 37       	cpi	r26, 0x78	; 120
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a8 e7       	ldi	r26, 0x78	; 120
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 3a       	cpi	r26, 0xA6	; 166
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 26 06 	call	0xc4c	; 0xc4c <main>
      8a:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <adc_init>:
#include "ADC_routine.h"
#include "serial_lib.h"

void adc_init()
{
	ADMUX |= (1 << REFS0);									    //reference AVcc 5volt
      92:	3e 9a       	sbi	0x07, 6	; 7
	ADCSRA |= (1 << ADEN);										//enable ADC Module
      94:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);		//prescaler 128
      96:	86 b1       	in	r24, 0x06	; 6
      98:	87 60       	ori	r24, 0x07	; 7
      9a:	86 b9       	out	0x06, r24	; 6
      9c:	08 95       	ret

0000009e <adcRead>:
}

int adcRead(uint8_t channel)
{
	ADMUX  &= ~(0x1F);				//disable all ADC channel
      9e:	97 b1       	in	r25, 0x07	; 7
      a0:	90 7e       	andi	r25, 0xE0	; 224
      a2:	97 b9       	out	0x07, r25	; 7
	ADMUX |= channel;		//set the ADC channel
      a4:	97 b1       	in	r25, 0x07	; 7
      a6:	89 2b       	or	r24, r25
      a8:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);			//start ADC conversion
      aa:	36 9a       	sbi	0x06, 6	; 6
	while(ADCSRA & (1<<ADSC));		//wait until conversion complete
      ac:	36 99       	sbic	0x06, 6	; 6
      ae:	fe cf       	rjmp	.-4      	; 0xac <adcRead+0xe>
	return ADC;						//return the ADC converted digital value
      b0:	84 b1       	in	r24, 0x04	; 4
      b2:	95 b1       	in	r25, 0x05	; 5
}
      b4:	08 95       	ret

000000b6 <sensorMapping>:
	GICR = (1 << INT0) | (1 << INT1)/* | (1 << INT2)*/;		// Enable Interrupt 0, Interrupt 1, Interrupt 2
}

void TIMER0_2_INT_init(void)
{
	TIMSK |= /*(1 << TOIE2) |*/ (1 << TOIE0);				// Enable Timer Overflow Interrupt 0, Timer Overflow Interrupt 2
      b6:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
      ba:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
      be:	90 93 a1 00 	sts	0x00A1, r25	; 0x8000a1 <prev_mappedValue+0x1>
      c2:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <prev_mappedValue>
      c6:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
      ca:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
      ce:	89 2b       	or	r24, r25
      d0:	49 f4       	brne	.+18     	; 0xe4 <sensorMapping+0x2e>
      d2:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <prev_mappedValue>
      d6:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <prev_mappedValue+0x1>
      da:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
      de:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
      e2:	08 95       	ret
      e4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
      e8:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
      ec:	8f 3f       	cpi	r24, 0xFF	; 255
      ee:	91 05       	cpc	r25, r1
      f0:	29 f4       	brne	.+10     	; 0xfc <sensorMapping+0x46>
      f2:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <mappedValue+0x1>
      f6:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <mappedValue>
      fa:	08 95       	ret
      fc:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     100:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     104:	49 97       	sbiw	r24, 0x19	; 25
     106:	39 f1       	breq	.+78     	; 0x156 <sensorMapping+0xa0>
     108:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     10c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     110:	09 97       	sbiw	r24, 0x09	; 9
     112:	09 f1       	breq	.+66     	; 0x156 <sensorMapping+0xa0>
     114:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     118:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     11c:	41 97       	sbiw	r24, 0x11	; 17
     11e:	d9 f0       	breq	.+54     	; 0x156 <sensorMapping+0xa0>
     120:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     124:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     128:	c1 97       	sbiw	r24, 0x31	; 49
     12a:	a9 f0       	breq	.+42     	; 0x156 <sensorMapping+0xa0>
     12c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     130:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     134:	81 37       	cpi	r24, 0x71	; 113
     136:	91 05       	cpc	r25, r1
     138:	71 f0       	breq	.+28     	; 0x156 <sensorMapping+0xa0>
     13a:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     13e:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     142:	81 36       	cpi	r24, 0x61	; 97
     144:	91 05       	cpc	r25, r1
     146:	39 f0       	breq	.+14     	; 0x156 <sensorMapping+0xa0>
     148:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     14c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     150:	83 36       	cpi	r24, 0x63	; 99
     152:	91 05       	cpc	r25, r1
     154:	39 f4       	brne	.+14     	; 0x164 <sensorMapping+0xae>
     156:	88 e7       	ldi	r24, 0x78	; 120
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     15e:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     162:	08 95       	ret
     164:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     168:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     16c:	0b 97       	sbiw	r24, 0x0b	; 11
     16e:	09 f4       	brne	.+2      	; 0x172 <sensorMapping+0xbc>
     170:	4d c0       	rjmp	.+154    	; 0x20c <sensorMapping+0x156>
     172:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     176:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     17a:	43 97       	sbiw	r24, 0x13	; 19
     17c:	09 f4       	brne	.+2      	; 0x180 <sensorMapping+0xca>
     17e:	46 c0       	rjmp	.+140    	; 0x20c <sensorMapping+0x156>
     180:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     184:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     188:	4b 97       	sbiw	r24, 0x1b	; 27
     18a:	09 f4       	brne	.+2      	; 0x18e <sensorMapping+0xd8>
     18c:	3f c0       	rjmp	.+126    	; 0x20c <sensorMapping+0x156>
     18e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     192:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     196:	0a 97       	sbiw	r24, 0x0a	; 10
     198:	c9 f1       	breq	.+114    	; 0x20c <sensorMapping+0x156>
     19a:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     19e:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     1a2:	42 97       	sbiw	r24, 0x12	; 18
     1a4:	99 f1       	breq	.+102    	; 0x20c <sensorMapping+0x156>
     1a6:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     1aa:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     1ae:	87 37       	cpi	r24, 0x77	; 119
     1b0:	91 05       	cpc	r25, r1
     1b2:	61 f1       	breq	.+88     	; 0x20c <sensorMapping+0x156>
     1b4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     1b8:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     1bc:	83 37       	cpi	r24, 0x73	; 115
     1be:	91 05       	cpc	r25, r1
     1c0:	29 f1       	breq	.+74     	; 0x20c <sensorMapping+0x156>
     1c2:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     1c6:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     1ca:	c7 97       	sbiw	r24, 0x37	; 55
     1cc:	f9 f0       	breq	.+62     	; 0x20c <sensorMapping+0x156>
     1ce:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     1d2:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     1d6:	4d 97       	sbiw	r24, 0x1d	; 29
     1d8:	c9 f0       	breq	.+50     	; 0x20c <sensorMapping+0x156>
     1da:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     1de:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     1e2:	87 36       	cpi	r24, 0x67	; 103
     1e4:	91 05       	cpc	r25, r1
     1e6:	91 f0       	breq	.+36     	; 0x20c <sensorMapping+0x156>
     1e8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     1ec:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     1f0:	0d 97       	sbiw	r24, 0x0d	; 13
     1f2:	61 f0       	breq	.+24     	; 0x20c <sensorMapping+0x156>
     1f4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     1f8:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     1fc:	c9 97       	sbiw	r24, 0x39	; 57
     1fe:	31 f0       	breq	.+12     	; 0x20c <sensorMapping+0x156>
     200:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     204:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     208:	c3 97       	sbiw	r24, 0x33	; 51
     20a:	39 f4       	brne	.+14     	; 0x21a <sensorMapping+0x164>
     20c:	88 e7       	ldi	r24, 0x78	; 120
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     214:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     218:	08 95       	ret
     21a:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     21e:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     222:	0f 97       	sbiw	r24, 0x0f	; 15
     224:	61 f0       	breq	.+24     	; 0x23e <sensorMapping+0x188>
     226:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     22a:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     22e:	4f 97       	sbiw	r24, 0x1f	; 31
     230:	31 f0       	breq	.+12     	; 0x23e <sensorMapping+0x188>
     232:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     236:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     23a:	cf 97       	sbiw	r24, 0x3f	; 63
     23c:	39 f4       	brne	.+14     	; 0x24c <sensorMapping+0x196>
     23e:	8d e7       	ldi	r24, 0x7D	; 125
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     246:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     24a:	08 95       	ret
     24c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     250:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     254:	01 97       	sbiw	r24, 0x01	; 1
     256:	39 f4       	brne	.+14     	; 0x266 <sensorMapping+0x1b0>
     258:	86 e4       	ldi	r24, 0x46	; 70
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     260:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     264:	08 95       	ret
     266:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     26a:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     26e:	03 97       	sbiw	r24, 0x03	; 3
     270:	39 f4       	brne	.+14     	; 0x280 <sensorMapping+0x1ca>
     272:	8c e3       	ldi	r24, 0x3C	; 60
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     27a:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     27e:	08 95       	ret
     280:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     284:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     288:	02 97       	sbiw	r24, 0x02	; 2
     28a:	39 f0       	breq	.+14     	; 0x29a <sensorMapping+0x1e4>
     28c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     290:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     294:	8d 3f       	cpi	r24, 0xFD	; 253
     296:	91 05       	cpc	r25, r1
     298:	39 f4       	brne	.+14     	; 0x2a8 <sensorMapping+0x1f2>
     29a:	8e e1       	ldi	r24, 0x1E	; 30
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     2a2:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     2a6:	08 95       	ret
     2a8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     2ac:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     2b0:	06 97       	sbiw	r24, 0x06	; 6
     2b2:	39 f0       	breq	.+14     	; 0x2c2 <sensorMapping+0x20c>
     2b4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     2b8:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     2bc:	89 3f       	cpi	r24, 0xF9	; 249
     2be:	91 05       	cpc	r25, r1
     2c0:	39 f4       	brne	.+14     	; 0x2d0 <sensorMapping+0x21a>
     2c2:	84 e1       	ldi	r24, 0x14	; 20
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     2ca:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     2ce:	08 95       	ret
     2d0:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     2d4:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     2d8:	04 97       	sbiw	r24, 0x04	; 4
     2da:	31 f0       	breq	.+12     	; 0x2e8 <sensorMapping+0x232>
     2dc:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     2e0:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     2e4:	0e 97       	sbiw	r24, 0x0e	; 14
     2e6:	39 f4       	brne	.+14     	; 0x2f6 <sensorMapping+0x240>
     2e8:	8f e0       	ldi	r24, 0x0F	; 15
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     2f0:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     2f4:	08 95       	ret
     2f6:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     2fa:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     2fe:	8b 3f       	cpi	r24, 0xFB	; 251
     300:	91 05       	cpc	r25, r1
     302:	81 f4       	brne	.+32     	; 0x324 <sensorMapping+0x26e>
     304:	8f e0       	ldi	r24, 0x0F	; 15
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     30c:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     310:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <reverseFlag>
     314:	81 11       	cpse	r24, r1
     316:	35 c2       	rjmp	.+1130   	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
     318:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <inverseLevel>
     31c:	8f 5f       	subi	r24, 0xFF	; 255
     31e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <inverseLevel>
     322:	08 95       	ret
     324:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     328:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     32c:	0c 97       	sbiw	r24, 0x0c	; 12
     32e:	39 f4       	brne	.+14     	; 0x33e <sensorMapping+0x288>
     330:	8a e0       	ldi	r24, 0x0A	; 10
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     338:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     33c:	08 95       	ret
     33e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     342:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     346:	83 3f       	cpi	r24, 0xF3	; 243
     348:	91 05       	cpc	r25, r1
     34a:	81 f4       	brne	.+32     	; 0x36c <sensorMapping+0x2b6>
     34c:	8a e0       	ldi	r24, 0x0A	; 10
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     354:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     358:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <reverseFlag>
     35c:	81 11       	cpse	r24, r1
     35e:	11 c2       	rjmp	.+1058   	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
     360:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <inverseLevel>
     364:	8f 5f       	subi	r24, 0xFF	; 255
     366:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <inverseLevel>
     36a:	08 95       	ret
     36c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     370:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     374:	08 97       	sbiw	r24, 0x08	; 8
     376:	31 f0       	breq	.+12     	; 0x384 <sensorMapping+0x2ce>
     378:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     37c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     380:	4c 97       	sbiw	r24, 0x1c	; 28
     382:	39 f4       	brne	.+14     	; 0x392 <sensorMapping+0x2dc>
     384:	85 e0       	ldi	r24, 0x05	; 5
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     38c:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     390:	08 95       	ret
     392:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     396:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     39a:	87 3f       	cpi	r24, 0xF7	; 247
     39c:	91 05       	cpc	r25, r1
     39e:	81 f4       	brne	.+32     	; 0x3c0 <sensorMapping+0x30a>
     3a0:	85 e0       	ldi	r24, 0x05	; 5
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     3a8:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     3ac:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <reverseFlag>
     3b0:	81 11       	cpse	r24, r1
     3b2:	e7 c1       	rjmp	.+974    	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
     3b4:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <inverseLevel>
     3b8:	8f 5f       	subi	r24, 0xFF	; 255
     3ba:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <inverseLevel>
     3be:	08 95       	ret
     3c0:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     3c4:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     3c8:	48 97       	sbiw	r24, 0x18	; 24
     3ca:	29 f4       	brne	.+10     	; 0x3d6 <sensorMapping+0x320>
     3cc:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <mappedValue+0x1>
     3d0:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <mappedValue>
     3d4:	08 95       	ret
     3d6:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     3da:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     3de:	87 3e       	cpi	r24, 0xE7	; 231
     3e0:	91 05       	cpc	r25, r1
     3e2:	71 f4       	brne	.+28     	; 0x400 <__LOCK_REGION_LENGTH__>
     3e4:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <mappedValue+0x1>
     3e8:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <mappedValue>
     3ec:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <reverseFlag>
     3f0:	81 11       	cpse	r24, r1
     3f2:	c7 c1       	rjmp	.+910    	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
     3f4:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <inverseLevel>
     3f8:	8f 5f       	subi	r24, 0xFF	; 255
     3fa:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <inverseLevel>
     3fe:	08 95       	ret
     400:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     404:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     408:	8e 3e       	cpi	r24, 0xEE	; 238
     40a:	91 05       	cpc	r25, r1
     40c:	e9 f1       	breq	.+122    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     40e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     412:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     416:	87 37       	cpi	r24, 0x77	; 119
     418:	91 05       	cpc	r25, r1
     41a:	b1 f1       	breq	.+108    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     41c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     420:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     424:	86 36       	cpi	r24, 0x66	; 102
     426:	91 05       	cpc	r25, r1
     428:	79 f1       	breq	.+94     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     42a:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     42e:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     432:	89 39       	cpi	r24, 0x99	; 153
     434:	91 05       	cpc	r25, r1
     436:	41 f1       	breq	.+80     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     438:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     43c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     440:	8e 37       	cpi	r24, 0x7E	; 126
     442:	91 05       	cpc	r25, r1
     444:	09 f1       	breq	.+66     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     446:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     44a:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     44e:	cc 97       	sbiw	r24, 0x3c	; 60
     450:	d9 f0       	breq	.+54     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     452:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     456:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     45a:	8c 37       	cpi	r24, 0x7C	; 124
     45c:	91 05       	cpc	r25, r1
     45e:	a1 f0       	breq	.+40     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     460:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     464:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     468:	ce 97       	sbiw	r24, 0x3e	; 62
     46a:	71 f0       	breq	.+28     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     46c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     470:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     474:	87 37       	cpi	r24, 0x77	; 119
     476:	91 05       	cpc	r25, r1
     478:	39 f0       	breq	.+14     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     47a:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     47e:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     482:	8e 3e       	cpi	r24, 0xEE	; 238
     484:	91 05       	cpc	r25, r1
     486:	29 f4       	brne	.+10     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
     488:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <mappedValue+0x1>
     48c:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <mappedValue>
     490:	08 95       	ret
     492:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     496:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     49a:	40 97       	sbiw	r24, 0x10	; 16
     49c:	31 f0       	breq	.+12     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     49e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     4a2:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     4a6:	c8 97       	sbiw	r24, 0x38	; 56
     4a8:	39 f4       	brne	.+14     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
     4aa:	8b ef       	ldi	r24, 0xFB	; 251
     4ac:	9f ef       	ldi	r25, 0xFF	; 255
     4ae:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     4b2:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     4b6:	08 95       	ret
     4b8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     4bc:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     4c0:	8f 3e       	cpi	r24, 0xEF	; 239
     4c2:	91 05       	cpc	r25, r1
     4c4:	81 f4       	brne	.+32     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
     4c6:	8b ef       	ldi	r24, 0xFB	; 251
     4c8:	9f ef       	ldi	r25, 0xFF	; 255
     4ca:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     4ce:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     4d2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <reverseFlag>
     4d6:	81 11       	cpse	r24, r1
     4d8:	54 c1       	rjmp	.+680    	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
     4da:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <inverseLevel>
     4de:	8f 5f       	subi	r24, 0xFF	; 255
     4e0:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <inverseLevel>
     4e4:	08 95       	ret
     4e6:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     4ea:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     4ee:	c0 97       	sbiw	r24, 0x30	; 48
     4f0:	39 f4       	brne	.+14     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
     4f2:	86 ef       	ldi	r24, 0xF6	; 246
     4f4:	9f ef       	ldi	r25, 0xFF	; 255
     4f6:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     4fa:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     4fe:	08 95       	ret
     500:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     504:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     508:	8f 3c       	cpi	r24, 0xCF	; 207
     50a:	91 05       	cpc	r25, r1
     50c:	81 f4       	brne	.+32     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
     50e:	86 ef       	ldi	r24, 0xF6	; 246
     510:	9f ef       	ldi	r25, 0xFF	; 255
     512:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     516:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     51a:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <reverseFlag>
     51e:	81 11       	cpse	r24, r1
     520:	30 c1       	rjmp	.+608    	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
     522:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <inverseLevel>
     526:	8f 5f       	subi	r24, 0xFF	; 255
     528:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <inverseLevel>
     52c:	08 95       	ret
     52e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     532:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     536:	80 97       	sbiw	r24, 0x20	; 32
     538:	39 f0       	breq	.+14     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
     53a:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     53e:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     542:	80 37       	cpi	r24, 0x70	; 112
     544:	91 05       	cpc	r25, r1
     546:	39 f4       	brne	.+14     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
     548:	81 ef       	ldi	r24, 0xF1	; 241
     54a:	9f ef       	ldi	r25, 0xFF	; 255
     54c:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     550:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     554:	08 95       	ret
     556:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     55a:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     55e:	8f 3d       	cpi	r24, 0xDF	; 223
     560:	91 05       	cpc	r25, r1
     562:	81 f4       	brne	.+32     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
     564:	81 ef       	ldi	r24, 0xF1	; 241
     566:	9f ef       	ldi	r25, 0xFF	; 255
     568:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     56c:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     570:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <reverseFlag>
     574:	81 11       	cpse	r24, r1
     576:	05 c1       	rjmp	.+522    	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
     578:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <inverseLevel>
     57c:	8f 5f       	subi	r24, 0xFF	; 255
     57e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <inverseLevel>
     582:	08 95       	ret
     584:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     588:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     58c:	80 36       	cpi	r24, 0x60	; 96
     58e:	91 05       	cpc	r25, r1
     590:	39 f0       	breq	.+14     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
     592:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     596:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     59a:	8f 39       	cpi	r24, 0x9F	; 159
     59c:	91 05       	cpc	r25, r1
     59e:	39 f4       	brne	.+14     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
     5a0:	8c ee       	ldi	r24, 0xEC	; 236
     5a2:	9f ef       	ldi	r25, 0xFF	; 255
     5a4:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     5a8:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     5ac:	08 95       	ret
     5ae:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     5b2:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     5b6:	80 34       	cpi	r24, 0x40	; 64
     5b8:	91 05       	cpc	r25, r1
     5ba:	39 f0       	breq	.+14     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
     5bc:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     5c0:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     5c4:	8f 3b       	cpi	r24, 0xBF	; 191
     5c6:	91 05       	cpc	r25, r1
     5c8:	39 f4       	brne	.+14     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
     5ca:	82 ee       	ldi	r24, 0xE2	; 226
     5cc:	9f ef       	ldi	r25, 0xFF	; 255
     5ce:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     5d2:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     5d6:	08 95       	ret
     5d8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     5dc:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     5e0:	80 3c       	cpi	r24, 0xC0	; 192
     5e2:	91 05       	cpc	r25, r1
     5e4:	39 f4       	brne	.+14     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
     5e6:	84 ec       	ldi	r24, 0xC4	; 196
     5e8:	9f ef       	ldi	r25, 0xFF	; 255
     5ea:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     5ee:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     5f2:	08 95       	ret
     5f4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     5f8:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     5fc:	80 38       	cpi	r24, 0x80	; 128
     5fe:	91 05       	cpc	r25, r1
     600:	39 f4       	brne	.+14     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
     602:	8a eb       	ldi	r24, 0xBA	; 186
     604:	9f ef       	ldi	r25, 0xFF	; 255
     606:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     60a:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     60e:	08 95       	ret
     610:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     614:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     618:	80 3f       	cpi	r24, 0xF0	; 240
     61a:	91 05       	cpc	r25, r1
     61c:	71 f0       	breq	.+28     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
     61e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     622:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     626:	88 3f       	cpi	r24, 0xF8	; 248
     628:	91 05       	cpc	r25, r1
     62a:	39 f0       	breq	.+14     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
     62c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     630:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     634:	8c 3f       	cpi	r24, 0xFC	; 252
     636:	91 05       	cpc	r25, r1
     638:	39 f4       	brne	.+14     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
     63a:	83 e8       	ldi	r24, 0x83	; 131
     63c:	9f ef       	ldi	r25, 0xFF	; 255
     63e:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     642:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     646:	08 95       	ret
     648:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     64c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     650:	88 3d       	cpi	r24, 0xD8	; 216
     652:	91 05       	cpc	r25, r1
     654:	09 f4       	brne	.+2      	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
     656:	57 c0       	rjmp	.+174    	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     658:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     65c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     660:	80 3d       	cpi	r24, 0xD0	; 208
     662:	91 05       	cpc	r25, r1
     664:	09 f4       	brne	.+2      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
     666:	4f c0       	rjmp	.+158    	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     668:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     66c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     670:	88 3c       	cpi	r24, 0xC8	; 200
     672:	91 05       	cpc	r25, r1
     674:	09 f4       	brne	.+2      	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
     676:	47 c0       	rjmp	.+142    	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     678:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     67c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     680:	80 35       	cpi	r24, 0x50	; 80
     682:	91 05       	cpc	r25, r1
     684:	09 f4       	brne	.+2      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
     686:	3f c0       	rjmp	.+126    	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     688:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     68c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     690:	88 34       	cpi	r24, 0x48	; 72
     692:	91 05       	cpc	r25, r1
     694:	c1 f1       	breq	.+112    	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     696:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     69a:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     69e:	8e 3e       	cpi	r24, 0xEE	; 238
     6a0:	91 05       	cpc	r25, r1
     6a2:	89 f1       	breq	.+98     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     6a4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     6a8:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     6ac:	8e 3c       	cpi	r24, 0xCE	; 206
     6ae:	91 05       	cpc	r25, r1
     6b0:	51 f1       	breq	.+84     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     6b2:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     6b6:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     6ba:	8c 3e       	cpi	r24, 0xEC	; 236
     6bc:	91 05       	cpc	r25, r1
     6be:	19 f1       	breq	.+70     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     6c0:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     6c4:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     6c8:	88 3b       	cpi	r24, 0xB8	; 184
     6ca:	91 05       	cpc	r25, r1
     6cc:	e1 f0       	breq	.+56     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     6ce:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     6d2:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     6d6:	86 3e       	cpi	r24, 0xE6	; 230
     6d8:	91 05       	cpc	r25, r1
     6da:	a9 f0       	breq	.+42     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     6dc:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     6e0:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     6e4:	80 3b       	cpi	r24, 0xB0	; 176
     6e6:	91 05       	cpc	r25, r1
     6e8:	71 f0       	breq	.+28     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     6ea:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     6ee:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     6f2:	8c 39       	cpi	r24, 0x9C	; 156
     6f4:	91 05       	cpc	r25, r1
     6f6:	39 f0       	breq	.+14     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     6f8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     6fc:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     700:	8c 3c       	cpi	r24, 0xCC	; 204
     702:	91 05       	cpc	r25, r1
     704:	39 f4       	brne	.+14     	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
     706:	88 e8       	ldi	r24, 0x88	; 136
     708:	9f ef       	ldi	r25, 0xFF	; 255
     70a:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     70e:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     712:	08 95       	ret
     714:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     718:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     71c:	88 39       	cpi	r24, 0x98	; 152
     71e:	91 05       	cpc	r25, r1
     720:	51 f1       	breq	.+84     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     722:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     726:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     72a:	80 39       	cpi	r24, 0x90	; 144
     72c:	91 05       	cpc	r25, r1
     72e:	19 f1       	breq	.+70     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     730:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     734:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     738:	88 38       	cpi	r24, 0x88	; 136
     73a:	91 05       	cpc	r25, r1
     73c:	e1 f0       	breq	.+56     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     73e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     742:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     746:	8c 38       	cpi	r24, 0x8C	; 140
     748:	91 05       	cpc	r25, r1
     74a:	a9 f0       	breq	.+42     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     74c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     750:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     754:	8e 38       	cpi	r24, 0x8E	; 142
     756:	91 05       	cpc	r25, r1
     758:	71 f0       	breq	.+28     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     75a:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     75e:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     762:	86 38       	cpi	r24, 0x86	; 134
     764:	91 05       	cpc	r25, r1
     766:	39 f0       	breq	.+14     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     768:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     76c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     770:	86 3c       	cpi	r24, 0xC6	; 198
     772:	91 05       	cpc	r25, r1
     774:	31 f4       	brne	.+12     	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
     776:	88 e8       	ldi	r24, 0x88	; 136
     778:	9f ef       	ldi	r25, 0xFF	; 255
     77a:	90 93 a3 00 	sts	0x00A3, r25	; 0x8000a3 <mappedValue+0x1>
     77e:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <mappedValue>
     782:	08 95       	ret

00000784 <setRotationForward>:
     784:	80 e0       	ldi	r24, 0x00	; 0
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     794:	af 9a       	sbi	0x15, 7	; 21
     796:	ae 98       	cbi	0x15, 6	; 21
     798:	ad 9a       	sbi	0x15, 5	; 21
     79a:	ac 98       	cbi	0x15, 4	; 21
     79c:	08 95       	ret

0000079e <setRotationLeftSharp>:
     79e:	80 e0       	ldi	r24, 0x00	; 0
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     7ae:	af 98       	cbi	0x15, 7	; 21
     7b0:	ae 9a       	sbi	0x15, 6	; 21
     7b2:	ad 9a       	sbi	0x15, 5	; 21
     7b4:	ac 98       	cbi	0x15, 4	; 21
     7b6:	08 95       	ret

000007b8 <setRotationRightSharp>:
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     7c8:	af 9a       	sbi	0x15, 7	; 21
     7ca:	ae 98       	cbi	0x15, 6	; 21
     7cc:	ad 98       	cbi	0x15, 5	; 21
     7ce:	ac 9a       	sbi	0x15, 4	; 21
     7d0:	08 95       	ret

000007d2 <PID_Correction>:
     7d2:	8f 92       	push	r8
     7d4:	9f 92       	push	r9
     7d6:	af 92       	push	r10
     7d8:	bf 92       	push	r11
     7da:	cf 92       	push	r12
     7dc:	df 92       	push	r13
     7de:	ef 92       	push	r14
     7e0:	ff 92       	push	r15
     7e2:	0f 93       	push	r16
     7e4:	1f 93       	push	r17
     7e6:	cf 93       	push	r28
     7e8:	c0 91 84 00 	lds	r28, 0x0084	; 0x800084 <weightedValue>
     7ec:	c1 95       	neg	r28
     7ee:	c0 93 95 00 	sts	0x0095, r28	; 0x800095 <error>
     7f2:	0c 2f       	mov	r16, r28
     7f4:	0c 2e       	mov	r0, r28
     7f6:	00 0c       	add	r0, r0
     7f8:	11 0b       	sbc	r17, r17
     7fa:	60 91 92 00 	lds	r22, 0x0092	; 0x800092 <sum_error>
     7fe:	70 91 93 00 	lds	r23, 0x0093	; 0x800093 <sum_error+0x1>
     802:	60 0f       	add	r22, r16
     804:	71 1f       	adc	r23, r17
     806:	77 23       	and	r23, r23
     808:	14 f4       	brge	.+4      	; 0x80e <PID_Correction+0x3c>
     80a:	6f 5f       	subi	r22, 0xFF	; 255
     80c:	7f 4f       	sbci	r23, 0xFF	; 255
     80e:	7b 01       	movw	r14, r22
     810:	f5 94       	asr	r15
     812:	e7 94       	ror	r14
     814:	f0 92 93 00 	sts	0x0093, r15	; 0x800093 <sum_error+0x1>
     818:	e0 92 92 00 	sts	0x0092, r14	; 0x800092 <sum_error>
     81c:	6c 2f       	mov	r22, r28
     81e:	0c 2e       	mov	r0, r28
     820:	00 0c       	add	r0, r0
     822:	77 0b       	sbc	r23, r23
     824:	88 0b       	sbc	r24, r24
     826:	99 0b       	sbc	r25, r25
     828:	0e 94 07 09 	call	0x120e	; 0x120e <__floatsisf>
     82c:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <Kp>
     830:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <Kp+0x1>
     834:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <Kp+0x2>
     838:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <Kp+0x3>
     83c:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     840:	4b 01       	movw	r8, r22
     842:	5c 01       	movw	r10, r24
     844:	b7 01       	movw	r22, r14
     846:	ff 0c       	add	r15, r15
     848:	88 0b       	sbc	r24, r24
     84a:	99 0b       	sbc	r25, r25
     84c:	0e 94 07 09 	call	0x120e	; 0x120e <__floatsisf>
     850:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__data_end>
     854:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__data_end+0x1>
     858:	40 91 7a 00 	lds	r20, 0x007A	; 0x80007a <__data_end+0x2>
     85c:	50 91 7b 00 	lds	r21, 0x007B	; 0x80007b <__data_end+0x3>
     860:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     864:	9b 01       	movw	r18, r22
     866:	ac 01       	movw	r20, r24
     868:	c5 01       	movw	r24, r10
     86a:	b4 01       	movw	r22, r8
     86c:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__addsf3>
     870:	6b 01       	movw	r12, r22
     872:	7c 01       	movw	r14, r24
     874:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <prev_error>
     878:	b8 01       	movw	r22, r16
     87a:	68 1b       	sub	r22, r24
     87c:	71 09       	sbc	r23, r1
     87e:	87 fd       	sbrc	r24, 7
     880:	73 95       	inc	r23
     882:	07 2e       	mov	r0, r23
     884:	00 0c       	add	r0, r0
     886:	88 0b       	sbc	r24, r24
     888:	99 0b       	sbc	r25, r25
     88a:	0e 94 07 09 	call	0x120e	; 0x120e <__floatsisf>
     88e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <Kd>
     892:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <Kd+0x1>
     896:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <Kd+0x2>
     89a:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <Kd+0x3>
     89e:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulsf3>
     8a2:	9b 01       	movw	r18, r22
     8a4:	ac 01       	movw	r20, r24
     8a6:	c7 01       	movw	r24, r14
     8a8:	b6 01       	movw	r22, r12
     8aa:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__addsf3>
     8ae:	60 93 8e 00 	sts	0x008E, r22	; 0x80008e <correction>
     8b2:	70 93 8f 00 	sts	0x008F, r23	; 0x80008f <correction+0x1>
     8b6:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <correction+0x2>
     8ba:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <correction+0x3>
     8be:	c0 93 94 00 	sts	0x0094, r28	; 0x800094 <prev_error>
     8c2:	0e 94 cf 08 	call	0x119e	; 0x119e <__fixsfsi>
     8c6:	70 93 8d 00 	sts	0x008D, r23	; 0x80008d <motorResponse+0x1>
     8ca:	60 93 8c 00 	sts	0x008C, r22	; 0x80008c <motorResponse>
     8ce:	69 3c       	cpi	r22, 0xC9	; 201
     8d0:	71 05       	cpc	r23, r1
     8d2:	cc f0       	brlt	.+50     	; 0x906 <__stack+0xa7>
     8d4:	68 5c       	subi	r22, 0xC8	; 200
     8d6:	69 3c       	cpi	r22, 0xC9	; 201
     8d8:	18 f4       	brcc	.+6      	; 0x8e0 <__stack+0x81>
     8da:	60 93 89 00 	sts	0x0089, r22	; 0x800089 <reverseSpeed>
     8de:	03 c0       	rjmp	.+6      	; 0x8e6 <__stack+0x87>
     8e0:	88 ec       	ldi	r24, 0xC8	; 200
     8e2:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <reverseSpeed>
     8e6:	88 ec       	ldi	r24, 0xC8	; 200
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <motorResponse+0x1>
     8ee:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <motorResponse>
     8f2:	0e 94 cf 03 	call	0x79e	; 0x79e <setRotationLeftSharp>
     8f6:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <reverseSpeed>
     8fa:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <LMspeed>
     8fe:	88 ec       	ldi	r24, 0xC8	; 200
     900:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <RMspeed>
     904:	40 c0       	rjmp	.+128    	; 0x986 <__stack+0x127>
     906:	68 33       	cpi	r22, 0x38	; 56
     908:	4f ef       	ldi	r20, 0xFF	; 255
     90a:	74 07       	cpc	r23, r20
     90c:	dc f4       	brge	.+54     	; 0x944 <__stack+0xe5>
     90e:	28 e3       	ldi	r18, 0x38	; 56
     910:	82 2f       	mov	r24, r18
     912:	86 1b       	sub	r24, r22
     914:	89 3c       	cpi	r24, 0xC9	; 201
     916:	18 f4       	brcc	.+6      	; 0x91e <__stack+0xbf>
     918:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <reverseSpeed>
     91c:	03 c0       	rjmp	.+6      	; 0x924 <__stack+0xc5>
     91e:	88 ec       	ldi	r24, 0xC8	; 200
     920:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <reverseSpeed>
     924:	88 e3       	ldi	r24, 0x38	; 56
     926:	9f ef       	ldi	r25, 0xFF	; 255
     928:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <motorResponse+0x1>
     92c:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <motorResponse>
     930:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <setRotationRightSharp>
     934:	88 ec       	ldi	r24, 0xC8	; 200
     936:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <LMspeed>
     93a:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <reverseSpeed>
     93e:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <RMspeed>
     942:	21 c0       	rjmp	.+66     	; 0x986 <__stack+0x127>
     944:	9b 01       	movw	r18, r22
     946:	29 53       	subi	r18, 0x39	; 57
     948:	3f 4f       	sbci	r19, 0xFF	; 255
     94a:	27 3c       	cpi	r18, 0xC7	; 199
     94c:	31 05       	cpc	r19, r1
     94e:	58 f4       	brcc	.+22     	; 0x966 <__stack+0x107>
     950:	0e 94 c2 03 	call	0x784	; 0x784 <setRotationForward>
     954:	88 ec       	ldi	r24, 0xC8	; 200
     956:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <LMspeed>
     95a:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <motorResponse>
     95e:	88 53       	subi	r24, 0x38	; 56
     960:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <RMspeed>
     964:	10 c0       	rjmp	.+32     	; 0x986 <__stack+0x127>
     966:	61 50       	subi	r22, 0x01	; 1
     968:	71 09       	sbc	r23, r1
     96a:	67 3c       	cpi	r22, 0xC7	; 199
     96c:	71 05       	cpc	r23, r1
     96e:	58 f4       	brcc	.+22     	; 0x986 <__stack+0x127>
     970:	0e 94 c2 03 	call	0x784	; 0x784 <setRotationForward>
     974:	88 ec       	ldi	r24, 0xC8	; 200
     976:	90 91 8c 00 	lds	r25, 0x008C	; 0x80008c <motorResponse>
     97a:	28 2f       	mov	r18, r24
     97c:	29 1b       	sub	r18, r25
     97e:	20 93 8b 00 	sts	0x008B, r18	; 0x80008b <LMspeed>
     982:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <RMspeed>
     986:	cf 91       	pop	r28
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	cf 90       	pop	r12
     994:	bf 90       	pop	r11
     996:	af 90       	pop	r10
     998:	9f 90       	pop	r9
     99a:	8f 90       	pop	r8
     99c:	08 95       	ret

0000099e <Forward>:
     99e:	80 e0       	ldi	r24, 0x00	; 0
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     9ae:	af 9a       	sbi	0x15, 7	; 21
     9b0:	ae 98       	cbi	0x15, 6	; 21
     9b2:	ad 9a       	sbi	0x15, 5	; 21
     9b4:	ac 98       	cbi	0x15, 4	; 21
     9b6:	88 ec       	ldi	r24, 0xC8	; 200
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     9be:	88 ec       	ldi	r24, 0xC8	; 200
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     9c6:	08 95       	ret

000009c8 <sensorValueConversion>:
     9c8:	5f 92       	push	r5
     9ca:	6f 92       	push	r6
     9cc:	7f 92       	push	r7
     9ce:	8f 92       	push	r8
     9d0:	9f 92       	push	r9
     9d2:	af 92       	push	r10
     9d4:	bf 92       	push	r11
     9d6:	cf 92       	push	r12
     9d8:	df 92       	push	r13
     9da:	ef 92       	push	r14
     9dc:	ff 92       	push	r15
     9de:	0f 93       	push	r16
     9e0:	1f 93       	push	r17
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
     9e6:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <sensorValue+0x1>
     9ea:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <sensorValue>
     9ee:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <weightedValue+0x1>
     9f2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <weightedValue>
     9f6:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <weightCount>
     9fa:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <exception>
     9fe:	0f 2e       	mov	r0, r31
     a00:	f8 e7       	ldi	r31, 0x78	; 120
     a02:	cf 2e       	mov	r12, r31
     a04:	f0 e0       	ldi	r31, 0x00	; 0
     a06:	df 2e       	mov	r13, r31
     a08:	f0 2d       	mov	r31, r0
     a0a:	06 e4       	ldi	r16, 0x46	; 70
     a0c:	10 e0       	ldi	r17, 0x00	; 0
     a0e:	0f 2e       	mov	r0, r31
     a10:	f7 e0       	ldi	r31, 0x07	; 7
     a12:	ff 2e       	mov	r15, r31
     a14:	f0 2d       	mov	r31, r0
     a16:	c0 e0       	ldi	r28, 0x00	; 0
     a18:	d0 e0       	ldi	r29, 0x00	; 0
     a1a:	e1 2c       	mov	r14, r1
     a1c:	b1 2c       	mov	r11, r1
     a1e:	61 2c       	mov	r6, r1
     a20:	71 2c       	mov	r7, r1
     a22:	81 2c       	mov	r8, r1
     a24:	99 24       	eor	r9, r9
     a26:	93 94       	inc	r9
     a28:	a1 2c       	mov	r10, r1
     a2a:	55 24       	eor	r5, r5
     a2c:	53 94       	inc	r5
     a2e:	8f 2d       	mov	r24, r15
     a30:	0e 94 4f 00 	call	0x9e	; 0x9e <adcRead>
     a34:	f6 01       	movw	r30, r12
     a36:	32 91       	ld	r19, -Z
     a38:	22 91       	ld	r18, -Z
     a3a:	6f 01       	movw	r12, r30
     a3c:	28 17       	cp	r18, r24
     a3e:	39 07       	cpc	r19, r25
     a40:	b8 f0       	brcs	.+46     	; 0xa70 <sensorValueConversion+0xa8>
     a42:	b0 2e       	mov	r11, r16
     a44:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <weightedValue>
     a48:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <weightedValue+0x1>
     a4c:	80 0f       	add	r24, r16
     a4e:	91 1f       	adc	r25, r17
     a50:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <weightedValue+0x1>
     a54:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <weightedValue>
     a58:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <weightCount>
     a5c:	8f 5f       	subi	r24, 0xFF	; 255
     a5e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <weightCount>
     a62:	e1 10       	cpse	r14, r1
     a64:	08 c0       	rjmp	.+16     	; 0xa76 <sensorValueConversion+0xae>
     a66:	60 2e       	mov	r6, r16
     a68:	e5 2c       	mov	r14, r5
     a6a:	89 2d       	mov	r24, r9
     a6c:	9a 2d       	mov	r25, r10
     a6e:	05 c0       	rjmp	.+10     	; 0xa7a <sensorValueConversion+0xb2>
     a70:	87 2d       	mov	r24, r7
     a72:	98 2d       	mov	r25, r8
     a74:	02 c0       	rjmp	.+4      	; 0xa7a <sensorValueConversion+0xb2>
     a76:	89 2d       	mov	r24, r9
     a78:	9a 2d       	mov	r25, r10
     a7a:	20 91 a4 00 	lds	r18, 0x00A4	; 0x8000a4 <sensorValue>
     a7e:	30 91 a5 00 	lds	r19, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     a82:	0c 2e       	mov	r0, r28
     a84:	02 c0       	rjmp	.+4      	; 0xa8a <sensorValueConversion+0xc2>
     a86:	88 0f       	add	r24, r24
     a88:	99 1f       	adc	r25, r25
     a8a:	0a 94       	dec	r0
     a8c:	e2 f7       	brpl	.-8      	; 0xa86 <sensorValueConversion+0xbe>
     a8e:	82 2b       	or	r24, r18
     a90:	93 2b       	or	r25, r19
     a92:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <sensorValue+0x1>
     a96:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <sensorValue>
     a9a:	21 96       	adiw	r28, 0x01	; 1
     a9c:	fa 94       	dec	r15
     a9e:	04 51       	subi	r16, 0x14	; 20
     aa0:	11 09       	sbc	r17, r1
     aa2:	c8 30       	cpi	r28, 0x08	; 8
     aa4:	d1 05       	cpc	r29, r1
     aa6:	19 f6       	brne	.-122    	; 0xa2e <sensorValueConversion+0x66>
     aa8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     aac:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     ab0:	89 2b       	or	r24, r25
     ab2:	99 f4       	brne	.+38     	; 0xada <sensorValueConversion+0x112>
     ab4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <allValueCount>
     ab8:	80 51       	subi	r24, 0x10	; 16
     aba:	84 35       	cpi	r24, 0x54	; 84
     abc:	18 f4       	brcc	.+6      	; 0xac4 <sensorValueConversion+0xfc>
     abe:	81 e0       	ldi	r24, 0x01	; 1
     ac0:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <acuteFlag>
     ac4:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <allValueCount>
     ac8:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <prev_weightedValue>
     acc:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <prev_weightedValue+0x1>
     ad0:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <weightedValue+0x1>
     ad4:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <weightedValue>
     ad8:	62 c0       	rjmp	.+196    	; 0xb9e <sensorValueConversion+0x1d6>
     ada:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     ade:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     ae2:	8f 3f       	cpi	r24, 0xFF	; 255
     ae4:	91 05       	cpc	r25, r1
     ae6:	e9 f4       	brne	.+58     	; 0xb22 <sensorValueConversion+0x15a>
     ae8:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <allValueCountFlag>
     aec:	81 11       	cpse	r24, r1
     aee:	05 c0       	rjmp	.+10     	; 0xafa <sensorValueConversion+0x132>
     af0:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <allValueCount>
     af4:	8f 5f       	subi	r24, 0xFF	; 255
     af6:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <allValueCount>
     afa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <weightedValue+0x1>
     afe:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <weightedValue>
     b02:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <exception>
     b06:	0e 94 cf 04 	call	0x99e	; 0x99e <Forward>
     b0a:	2f ef       	ldi	r18, 0xFF	; 255
     b0c:	41 ee       	ldi	r20, 0xE1	; 225
     b0e:	84 e0       	ldi	r24, 0x04	; 4
     b10:	21 50       	subi	r18, 0x01	; 1
     b12:	40 40       	sbci	r20, 0x00	; 0
     b14:	80 40       	sbci	r24, 0x00	; 0
     b16:	e1 f7       	brne	.-8      	; 0xb10 <sensorValueConversion+0x148>
     b18:	00 c0       	rjmp	.+0      	; 0xb1a <sensorValueConversion+0x152>
     b1a:	00 00       	nop
     b1c:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     b20:	3e c0       	rjmp	.+124    	; 0xb9e <sensorValueConversion+0x1d6>
     b22:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <allValueCount>
     b26:	26 2d       	mov	r18, r6
     b28:	2b 19       	sub	r18, r11
     b2a:	30 91 81 00 	lds	r19, 0x0081	; 0x800081 <weightCount>
     b2e:	63 2f       	mov	r22, r19
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <weightedValue>
     b36:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <weightedValue+0x1>
     b3a:	0e 94 00 0a 	call	0x1400	; 0x1400 <__divmodhi4>
     b3e:	70 93 85 00 	sts	0x0085, r23	; 0x800085 <weightedValue+0x1>
     b42:	60 93 84 00 	sts	0x0084, r22	; 0x800084 <weightedValue>
     b46:	70 93 83 00 	sts	0x0083, r23	; 0x800083 <prev_weightedValue+0x1>
     b4a:	60 93 82 00 	sts	0x0082, r22	; 0x800082 <prev_weightedValue>
     b4e:	84 ec       	ldi	r24, 0xC4	; 196
     b50:	82 0f       	add	r24, r18
     b52:	89 32       	cpi	r24, 0x29	; 41
     b54:	20 f5       	brcc	.+72     	; 0xb9e <sensorValueConversion+0x1d6>
     b56:	87 e6       	ldi	r24, 0x67	; 103
     b58:	28 02       	muls	r18, r24
     b5a:	81 2d       	mov	r24, r1
     b5c:	11 24       	eor	r1, r1
     b5e:	85 95       	asr	r24
     b60:	85 95       	asr	r24
     b62:	85 95       	asr	r24
     b64:	27 fd       	sbrc	r18, 7
     b66:	83 95       	inc	r24
     b68:	83 1b       	sub	r24, r19
     b6a:	8f 3f       	cpi	r24, 0xFF	; 255
     b6c:	59 f4       	brne	.+22     	; 0xb84 <sensorValueConversion+0x1bc>
     b6e:	81 e0       	ldi	r24, 0x01	; 1
     b70:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <exception>
     b74:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <exception_1_Count>
     b78:	8f 5f       	subi	r24, 0xFF	; 255
     b7a:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <exception_1_Count>
     b7e:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <exception_2_Count>
     b82:	15 c0       	rjmp	.+42     	; 0xbae <sensorValueConversion+0x1e6>
     b84:	83 30       	cpi	r24, 0x03	; 3
     b86:	58 f4       	brcc	.+22     	; 0xb9e <sensorValueConversion+0x1d6>
     b88:	82 e0       	ldi	r24, 0x02	; 2
     b8a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <exception>
     b8e:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <exception_1_Count>
     b92:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <exception_2_Count>
     b96:	8f 5f       	subi	r24, 0xFF	; 255
     b98:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <exception_2_Count>
     b9c:	08 c0       	rjmp	.+16     	; 0xbae <sensorValueConversion+0x1e6>
     b9e:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <exception>
     ba2:	81 11       	cpse	r24, r1
     ba4:	04 c0       	rjmp	.+8      	; 0xbae <sensorValueConversion+0x1e6>
     ba6:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <exception_1_Count>
     baa:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <exception_2_Count>
     bae:	df 91       	pop	r29
     bb0:	cf 91       	pop	r28
     bb2:	1f 91       	pop	r17
     bb4:	0f 91       	pop	r16
     bb6:	ff 90       	pop	r15
     bb8:	ef 90       	pop	r14
     bba:	df 90       	pop	r13
     bbc:	cf 90       	pop	r12
     bbe:	bf 90       	pop	r11
     bc0:	af 90       	pop	r10
     bc2:	9f 90       	pop	r9
     bc4:	8f 90       	pop	r8
     bc6:	7f 90       	pop	r7
     bc8:	6f 90       	pop	r6
     bca:	5f 90       	pop	r5
     bcc:	08 95       	ret

00000bce <Backward>:
     bce:	80 e0       	ldi	r24, 0x00	; 0
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     bde:	af 98       	cbi	0x15, 7	; 21
     be0:	ae 9a       	sbi	0x15, 6	; 21
     be2:	ad 98       	cbi	0x15, 5	; 21
     be4:	ac 9a       	sbi	0x15, 4	; 21
     be6:	82 e8       	ldi	r24, 0x82	; 130
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     bee:	82 e8       	ldi	r24, 0x82	; 130
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     bf6:	08 95       	ret

00000bf8 <RightSharp>:
     bf8:	80 e0       	ldi	r24, 0x00	; 0
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     c00:	80 e0       	ldi	r24, 0x00	; 0
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     c08:	af 9a       	sbi	0x15, 7	; 21
     c0a:	ae 98       	cbi	0x15, 6	; 21
     c0c:	ad 98       	cbi	0x15, 5	; 21
     c0e:	ac 9a       	sbi	0x15, 4	; 21
     c10:	86 e9       	ldi	r24, 0x96	; 150
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     c18:	86 e9       	ldi	r24, 0x96	; 150
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     c20:	08 95       	ret

00000c22 <LeftSharp>:
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     c32:	af 98       	cbi	0x15, 7	; 21
     c34:	ae 9a       	sbi	0x15, 6	; 21
     c36:	ad 9a       	sbi	0x15, 5	; 21
     c38:	ac 98       	cbi	0x15, 4	; 21
     c3a:	86 e9       	ldi	r24, 0x96	; 150
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     c42:	86 e9       	ldi	r24, 0x96	; 150
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     c4a:	08 95       	ret

00000c4c <main>:
     c4c:	8c 9a       	sbi	0x11, 4	; 17
     c4e:	8d 9a       	sbi	0x11, 5	; 17
     c50:	8b 98       	cbi	0x11, 3	; 17
     c52:	8a 98       	cbi	0x11, 2	; 17
     c54:	a7 9a       	sbi	0x14, 7	; 20
     c56:	a6 9a       	sbi	0x14, 6	; 20
     c58:	a5 9a       	sbi	0x14, 5	; 20
     c5a:	a4 9a       	sbi	0x14, 4	; 20
     c5c:	8f 9a       	sbi	0x11, 7	; 17
     c5e:	bb 9a       	sbi	0x17, 3	; 23
     c60:	0e 94 49 00 	call	0x92	; 0x92 <adc_init>
     c64:	0e 94 54 08 	call	0x10a8	; 0x10a8 <UART_init>
     c68:	0e 94 3c 08 	call	0x1078	; 0x1078 <PWM0_init>
     c6c:	0e 94 46 08 	call	0x108c	; 0x108c <PWM2_init>
     c70:	0e 94 c2 03 	call	0x784	; 0x784 <setRotationForward>
     c74:	0e 94 cf 04 	call	0x99e	; 0x99e <Forward>
     c78:	88 ec       	ldi	r24, 0xC8	; 200
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     c80:	88 ec       	ldi	r24, 0xC8	; 200
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     c88:	0e 94 cf 04 	call	0x99e	; 0x99e <Forward>
     c8c:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     c90:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     c94:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     c98:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     c9c:	88 37       	cpi	r24, 0x78	; 120
     c9e:	91 05       	cpc	r25, r1
     ca0:	09 f0       	breq	.+2      	; 0xca4 <main+0x58>
     ca2:	40 c0       	rjmp	.+128    	; 0xd24 <main+0xd8>
     ca4:	36 c0       	rjmp	.+108    	; 0xd12 <main+0xc6>
     ca6:	cf 5f       	subi	r28, 0xFF	; 255
     ca8:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     cac:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     cb0:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     cb4:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     cb8:	8f 3f       	cpi	r24, 0xFF	; 255
     cba:	91 05       	cpc	r25, r1
     cbc:	09 f4       	brne	.+2      	; 0xcc0 <main+0x74>
     cbe:	89 c0       	rjmp	.+274    	; 0xdd2 <main+0x186>
     cc0:	c5 31       	cpi	r28, 0x15	; 21
     cc2:	40 f1       	brcs	.+80     	; 0xd14 <main+0xc8>
     cc4:	0e 94 e7 05 	call	0xbce	; 0xbce <Backward>
     cc8:	2f ef       	ldi	r18, 0xFF	; 255
     cca:	80 e7       	ldi	r24, 0x70	; 112
     ccc:	92 e0       	ldi	r25, 0x02	; 2
     cce:	21 50       	subi	r18, 0x01	; 1
     cd0:	80 40       	sbci	r24, 0x00	; 0
     cd2:	90 40       	sbci	r25, 0x00	; 0
     cd4:	e1 f7       	brne	.-8      	; 0xcce <main+0x82>
     cd6:	00 c0       	rjmp	.+0      	; 0xcd8 <main+0x8c>
     cd8:	00 00       	nop
     cda:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <RightSharp>
     cde:	2f ef       	ldi	r18, 0xFF	; 255
     ce0:	85 ea       	ldi	r24, 0xA5	; 165
     ce2:	9e e0       	ldi	r25, 0x0E	; 14
     ce4:	21 50       	subi	r18, 0x01	; 1
     ce6:	80 40       	sbci	r24, 0x00	; 0
     ce8:	90 40       	sbci	r25, 0x00	; 0
     cea:	e1 f7       	brne	.-8      	; 0xce4 <main+0x98>
     cec:	00 c0       	rjmp	.+0      	; 0xcee <main+0xa2>
     cee:	00 00       	nop
     cf0:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     cf4:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     cf8:	c3 97       	sbiw	r24, 0x33	; 51
     cfa:	64 f0       	brlt	.+24     	; 0xd14 <main+0xc8>
     cfc:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     d00:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     d04:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     d08:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     d0c:	c3 97       	sbiw	r24, 0x33	; 51
     d0e:	b4 f7       	brge	.-20     	; 0xcfc <main+0xb0>
     d10:	01 c0       	rjmp	.+2      	; 0xd14 <main+0xc8>
     d12:	c0 e0       	ldi	r28, 0x00	; 0
     d14:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     d18:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     d1c:	88 37       	cpi	r24, 0x78	; 120
     d1e:	91 05       	cpc	r25, r1
     d20:	11 f2       	breq	.-124    	; 0xca6 <main+0x5a>
     d22:	57 c0       	rjmp	.+174    	; 0xdd2 <main+0x186>
     d24:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     d28:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     d2c:	88 38       	cpi	r24, 0x88	; 136
     d2e:	9f 4f       	sbci	r25, 0xFF	; 255
     d30:	09 f0       	breq	.+2      	; 0xd34 <main+0xe8>
     d32:	4f c0       	rjmp	.+158    	; 0xdd2 <main+0x186>
     d34:	45 c0       	rjmp	.+138    	; 0xdc0 <main+0x174>
     d36:	cf 5f       	subi	r28, 0xFF	; 255
     d38:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     d3c:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     d40:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     d44:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     d48:	8f 3f       	cpi	r24, 0xFF	; 255
     d4a:	91 05       	cpc	r25, r1
     d4c:	09 f4       	brne	.+2      	; 0xd50 <main+0x104>
     d4e:	41 c0       	rjmp	.+130    	; 0xdd2 <main+0x186>
     d50:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     d54:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     d58:	44 97       	sbiw	r24, 0x14	; 20
     d5a:	3c f4       	brge	.+14     	; 0xd6a <main+0x11e>
     d5c:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     d60:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     d64:	8d 3e       	cpi	r24, 0xED	; 237
     d66:	9f 4f       	sbci	r25, 0xFF	; 255
     d68:	a4 f5       	brge	.+104    	; 0xdd2 <main+0x186>
     d6a:	c5 31       	cpi	r28, 0x15	; 21
     d6c:	50 f1       	brcs	.+84     	; 0xdc2 <main+0x176>
     d6e:	0e 94 e7 05 	call	0xbce	; 0xbce <Backward>
     d72:	8f ef       	ldi	r24, 0xFF	; 255
     d74:	90 e7       	ldi	r25, 0x70	; 112
     d76:	22 e0       	ldi	r18, 0x02	; 2
     d78:	81 50       	subi	r24, 0x01	; 1
     d7a:	90 40       	sbci	r25, 0x00	; 0
     d7c:	20 40       	sbci	r18, 0x00	; 0
     d7e:	e1 f7       	brne	.-8      	; 0xd78 <main+0x12c>
     d80:	00 c0       	rjmp	.+0      	; 0xd82 <main+0x136>
     d82:	00 00       	nop
     d84:	0e 94 11 06 	call	0xc22	; 0xc22 <LeftSharp>
     d88:	8f ef       	ldi	r24, 0xFF	; 255
     d8a:	95 ea       	ldi	r25, 0xA5	; 165
     d8c:	2e e0       	ldi	r18, 0x0E	; 14
     d8e:	81 50       	subi	r24, 0x01	; 1
     d90:	90 40       	sbci	r25, 0x00	; 0
     d92:	20 40       	sbci	r18, 0x00	; 0
     d94:	e1 f7       	brne	.-8      	; 0xd8e <main+0x142>
     d96:	00 c0       	rjmp	.+0      	; 0xd98 <main+0x14c>
     d98:	00 00       	nop
     d9a:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     d9e:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     da2:	8e 3c       	cpi	r24, 0xCE	; 206
     da4:	9f 4f       	sbci	r25, 0xFF	; 255
     da6:	6c f4       	brge	.+26     	; 0xdc2 <main+0x176>
     da8:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     dac:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     db0:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     db4:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     db8:	8e 3c       	cpi	r24, 0xCE	; 206
     dba:	9f 4f       	sbci	r25, 0xFF	; 255
     dbc:	ac f3       	brlt	.-22     	; 0xda8 <main+0x15c>
     dbe:	01 c0       	rjmp	.+2      	; 0xdc2 <main+0x176>
     dc0:	c0 e0       	ldi	r28, 0x00	; 0
     dc2:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     dc6:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     dca:	88 38       	cpi	r24, 0x88	; 136
     dcc:	9f 4f       	sbci	r25, 0xFF	; 255
     dce:	09 f4       	brne	.+2      	; 0xdd2 <main+0x186>
     dd0:	b2 cf       	rjmp	.-156    	; 0xd36 <main+0xea>
     dd2:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     dd6:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     dda:	8d 37       	cpi	r24, 0x7D	; 125
     ddc:	91 05       	cpc	r25, r1
     dde:	09 f0       	breq	.+2      	; 0xde2 <main+0x196>
     de0:	40 c0       	rjmp	.+128    	; 0xe62 <main+0x216>
     de2:	36 c0       	rjmp	.+108    	; 0xe50 <main+0x204>
     de4:	cf 5f       	subi	r28, 0xFF	; 255
     de6:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     dea:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     dee:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     df2:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     df6:	8f 3f       	cpi	r24, 0xFF	; 255
     df8:	91 05       	cpc	r25, r1
     dfa:	09 f4       	brne	.+2      	; 0xdfe <main+0x1b2>
     dfc:	7a c0       	rjmp	.+244    	; 0xef2 <main+0x2a6>
     dfe:	cb 30       	cpi	r28, 0x0B	; 11
     e00:	40 f1       	brcs	.+80     	; 0xe52 <main+0x206>
     e02:	0e 94 e7 05 	call	0xbce	; 0xbce <Backward>
     e06:	8f ef       	ldi	r24, 0xFF	; 255
     e08:	90 e7       	ldi	r25, 0x70	; 112
     e0a:	22 e0       	ldi	r18, 0x02	; 2
     e0c:	81 50       	subi	r24, 0x01	; 1
     e0e:	90 40       	sbci	r25, 0x00	; 0
     e10:	20 40       	sbci	r18, 0x00	; 0
     e12:	e1 f7       	brne	.-8      	; 0xe0c <main+0x1c0>
     e14:	00 c0       	rjmp	.+0      	; 0xe16 <main+0x1ca>
     e16:	00 00       	nop
     e18:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <RightSharp>
     e1c:	8f ef       	ldi	r24, 0xFF	; 255
     e1e:	93 ec       	ldi	r25, 0xC3	; 195
     e20:	29 e0       	ldi	r18, 0x09	; 9
     e22:	81 50       	subi	r24, 0x01	; 1
     e24:	90 40       	sbci	r25, 0x00	; 0
     e26:	20 40       	sbci	r18, 0x00	; 0
     e28:	e1 f7       	brne	.-8      	; 0xe22 <main+0x1d6>
     e2a:	00 c0       	rjmp	.+0      	; 0xe2c <main+0x1e0>
     e2c:	00 00       	nop
     e2e:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     e32:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     e36:	c3 97       	sbiw	r24, 0x33	; 51
     e38:	64 f0       	brlt	.+24     	; 0xe52 <main+0x206>
     e3a:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     e3e:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     e42:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     e46:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     e4a:	c3 97       	sbiw	r24, 0x33	; 51
     e4c:	b4 f7       	brge	.-20     	; 0xe3a <main+0x1ee>
     e4e:	01 c0       	rjmp	.+2      	; 0xe52 <main+0x206>
     e50:	c0 e0       	ldi	r28, 0x00	; 0
     e52:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     e56:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     e5a:	8d 37       	cpi	r24, 0x7D	; 125
     e5c:	91 05       	cpc	r25, r1
     e5e:	11 f2       	breq	.-124    	; 0xde4 <main+0x198>
     e60:	48 c0       	rjmp	.+144    	; 0xef2 <main+0x2a6>
     e62:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     e66:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     e6a:	83 38       	cpi	r24, 0x83	; 131
     e6c:	9f 4f       	sbci	r25, 0xFF	; 255
     e6e:	09 f0       	breq	.+2      	; 0xe72 <main+0x226>
     e70:	40 c0       	rjmp	.+128    	; 0xef2 <main+0x2a6>
     e72:	37 c0       	rjmp	.+110    	; 0xee2 <main+0x296>
     e74:	cf 5f       	subi	r28, 0xFF	; 255
     e76:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     e7a:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     e7e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     e82:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     e86:	8f 3f       	cpi	r24, 0xFF	; 255
     e88:	91 05       	cpc	r25, r1
     e8a:	99 f1       	breq	.+102    	; 0xef2 <main+0x2a6>
     e8c:	cb 30       	cpi	r28, 0x0B	; 11
     e8e:	50 f1       	brcs	.+84     	; 0xee4 <main+0x298>
     e90:	0e 94 e7 05 	call	0xbce	; 0xbce <Backward>
     e94:	8f ef       	ldi	r24, 0xFF	; 255
     e96:	90 e7       	ldi	r25, 0x70	; 112
     e98:	22 e0       	ldi	r18, 0x02	; 2
     e9a:	81 50       	subi	r24, 0x01	; 1
     e9c:	90 40       	sbci	r25, 0x00	; 0
     e9e:	20 40       	sbci	r18, 0x00	; 0
     ea0:	e1 f7       	brne	.-8      	; 0xe9a <main+0x24e>
     ea2:	00 c0       	rjmp	.+0      	; 0xea4 <main+0x258>
     ea4:	00 00       	nop
     ea6:	0e 94 11 06 	call	0xc22	; 0xc22 <LeftSharp>
     eaa:	8f ef       	ldi	r24, 0xFF	; 255
     eac:	93 ec       	ldi	r25, 0xC3	; 195
     eae:	29 e0       	ldi	r18, 0x09	; 9
     eb0:	81 50       	subi	r24, 0x01	; 1
     eb2:	90 40       	sbci	r25, 0x00	; 0
     eb4:	20 40       	sbci	r18, 0x00	; 0
     eb6:	e1 f7       	brne	.-8      	; 0xeb0 <main+0x264>
     eb8:	00 c0       	rjmp	.+0      	; 0xeba <main+0x26e>
     eba:	00 00       	nop
     ebc:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     ec0:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     ec4:	8e 3c       	cpi	r24, 0xCE	; 206
     ec6:	9f 4f       	sbci	r25, 0xFF	; 255
     ec8:	6c f4       	brge	.+26     	; 0xee4 <main+0x298>
     eca:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     ece:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     ed2:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     ed6:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     eda:	8e 3c       	cpi	r24, 0xCE	; 206
     edc:	9f 4f       	sbci	r25, 0xFF	; 255
     ede:	ac f3       	brlt	.-22     	; 0xeca <main+0x27e>
     ee0:	01 c0       	rjmp	.+2      	; 0xee4 <main+0x298>
     ee2:	c0 e0       	ldi	r28, 0x00	; 0
     ee4:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <mappedValue>
     ee8:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <mappedValue+0x1>
     eec:	83 38       	cpi	r24, 0x83	; 131
     eee:	9f 4f       	sbci	r25, 0xFF	; 255
     ef0:	09 f2       	breq	.-126    	; 0xe74 <main+0x228>
     ef2:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     ef6:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     efa:	8f 3f       	cpi	r24, 0xFF	; 255
     efc:	91 05       	cpc	r25, r1
     efe:	21 f4       	brne	.+8      	; 0xf08 <main+0x2bc>
     f00:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     f04:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     f08:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     f0c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     f10:	81 31       	cpi	r24, 0x11	; 17
     f12:	91 40       	sbci	r25, 0x01	; 1
     f14:	59 f4       	brne	.+22     	; 0xf2c <main+0x2e0>
     f16:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <sensorValueConversion>
     f1a:	0e 94 5b 00 	call	0xb6	; 0xb6 <sensorMapping>
     f1e:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     f22:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     f26:	81 31       	cpi	r24, 0x11	; 17
     f28:	91 40       	sbci	r25, 0x01	; 1
     f2a:	a9 f3       	breq	.-22     	; 0xf16 <main+0x2ca>
     f2c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <sensorValue>
     f30:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <sensorValue+0x1>
     f34:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <PID_Correction>
     f38:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <LMspeed>
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	0e 94 50 08 	call	0x10a0	; 0x10a0 <PWM0>
     f42:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <RMspeed>
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	0e 94 52 08 	call	0x10a4	; 0x10a4 <PWM2>
     f4c:	9f ce       	rjmp	.-706    	; 0xc8c <main+0x40>

00000f4e <__vector_1>:
}

ISR (INT0_vect)
{
     f4e:	1f 92       	push	r1
     f50:	0f 92       	push	r0
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	0f 92       	push	r0
     f56:	11 24       	eor	r1, r1
     f58:	8f 93       	push	r24
     f5a:	9f 93       	push	r25
	if (choice1 == 0)
     f5c:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <choice1>
     f60:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <choice1+0x1>
     f64:	89 2b       	or	r24, r25
     f66:	51 f4       	brne	.+20     	; 0xf7c <__vector_1+0x2e>
	{
		TCCR1B |= (1 << CS11);
     f68:	8e b5       	in	r24, 0x2e	; 46
     f6a:	82 60       	ori	r24, 0x02	; 2
     f6c:	8e bd       	out	0x2e, r24	; 46
		choice1 = 1;
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <choice1+0x1>
     f76:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <choice1>
     f7a:	15 c0       	rjmp	.+42     	; 0xfa6 <__vector_1+0x58>
	}
	else if (choice1 == 1)
     f7c:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <choice1>
     f80:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <choice1+0x1>
     f84:	01 97       	sbiw	r24, 0x01	; 1
     f86:	79 f4       	brne	.+30     	; 0xfa6 <__vector_1+0x58>
	{
		TCCR1B = 0;
     f88:	1e bc       	out	0x2e, r1	; 46
		pulse1 = TCNT1 / 2;
     f8a:	8c b5       	in	r24, 0x2c	; 44
     f8c:	9d b5       	in	r25, 0x2d	; 45
     f8e:	96 95       	lsr	r25
     f90:	87 95       	ror	r24
     f92:	90 93 9f 00 	sts	0x009F, r25	; 0x80009f <pulse1+0x1>
     f96:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <pulse1>
		TCNT1 = 0;
     f9a:	1d bc       	out	0x2d, r1	; 45
     f9c:	1c bc       	out	0x2c, r1	; 44
		choice1 = 0;
     f9e:	10 92 9d 00 	sts	0x009D, r1	; 0x80009d <choice1+0x1>
     fa2:	10 92 9c 00 	sts	0x009C, r1	; 0x80009c <choice1>
	}
}
     fa6:	9f 91       	pop	r25
     fa8:	8f 91       	pop	r24
     faa:	0f 90       	pop	r0
     fac:	0f be       	out	0x3f, r0	; 63
     fae:	0f 90       	pop	r0
     fb0:	1f 90       	pop	r1
     fb2:	18 95       	reti

00000fb4 <__vector_2>:

ISR (INT1_vect)
{
     fb4:	1f 92       	push	r1
     fb6:	0f 92       	push	r0
     fb8:	0f b6       	in	r0, 0x3f	; 63
     fba:	0f 92       	push	r0
     fbc:	11 24       	eor	r1, r1
     fbe:	2f 93       	push	r18
     fc0:	3f 93       	push	r19
     fc2:	4f 93       	push	r20
     fc4:	5f 93       	push	r21
     fc6:	8f 93       	push	r24
     fc8:	9f 93       	push	r25
	if (choice2 == 0)
     fca:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <choice2>
     fce:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <choice2+0x1>
     fd2:	89 2b       	or	r24, r25
     fd4:	51 f4       	brne	.+20     	; 0xfea <__vector_2+0x36>
	{
		TCCR0 |= 0b00000011;
     fd6:	83 b7       	in	r24, 0x33	; 51
     fd8:	83 60       	ori	r24, 0x03	; 3
     fda:	83 bf       	out	0x33, r24	; 51
		choice2 = 1;
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <choice2+0x1>
     fe4:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <choice2>
     fe8:	25 c0       	rjmp	.+74     	; 0x1034 <__vector_2+0x80>
	}
	else if (choice2 == 1)
     fea:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <choice2>
     fee:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <choice2+0x1>
     ff2:	01 97       	sbiw	r24, 0x01	; 1
     ff4:	f9 f4       	brne	.+62     	; 0x1034 <__vector_2+0x80>
	{
		TCCR0 = 0;
     ff6:	13 be       	out	0x33, r1	; 51
		pulse2 = (TCNT0 + (0xFF * TIMER0_INT)) * 4;
     ff8:	22 b7       	in	r18, 0x32	; 50
     ffa:	40 91 96 00 	lds	r20, 0x0096	; 0x800096 <TIMER0_INT>
     ffe:	50 91 97 00 	lds	r21, 0x0097	; 0x800097 <TIMER0_INT+0x1>
    1002:	3f ef       	ldi	r19, 0xFF	; 255
    1004:	34 9f       	mul	r19, r20
    1006:	c0 01       	movw	r24, r0
    1008:	35 9f       	mul	r19, r21
    100a:	90 0d       	add	r25, r0
    100c:	11 24       	eor	r1, r1
    100e:	82 0f       	add	r24, r18
    1010:	91 1d       	adc	r25, r1
    1012:	88 0f       	add	r24, r24
    1014:	99 1f       	adc	r25, r25
    1016:	88 0f       	add	r24, r24
    1018:	99 1f       	adc	r25, r25
    101a:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <pulse2+0x1>
    101e:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <pulse2>
		TIMER0_INT = 0;
    1022:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <TIMER0_INT+0x1>
    1026:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <TIMER0_INT>
		TCNT0 = 0;
    102a:	12 be       	out	0x32, r1	; 50
		choice2 = 0;
    102c:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <choice2+0x1>
    1030:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <choice2>
	}
}
    1034:	9f 91       	pop	r25
    1036:	8f 91       	pop	r24
    1038:	5f 91       	pop	r21
    103a:	4f 91       	pop	r20
    103c:	3f 91       	pop	r19
    103e:	2f 91       	pop	r18
    1040:	0f 90       	pop	r0
    1042:	0f be       	out	0x3f, r0	; 63
    1044:	0f 90       	pop	r0
    1046:	1f 90       	pop	r1
    1048:	18 95       	reti

0000104a <__vector_11>:
// {
// 	TIMER2_INT++;
// }

ISR (TIMER0_OVF_vect)
{
    104a:	1f 92       	push	r1
    104c:	0f 92       	push	r0
    104e:	0f b6       	in	r0, 0x3f	; 63
    1050:	0f 92       	push	r0
    1052:	11 24       	eor	r1, r1
    1054:	8f 93       	push	r24
    1056:	9f 93       	push	r25
	TIMER0_INT++;
    1058:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <TIMER0_INT>
    105c:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <TIMER0_INT+0x1>
    1060:	01 96       	adiw	r24, 0x01	; 1
    1062:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <TIMER0_INT+0x1>
    1066:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <TIMER0_INT>
}
    106a:	9f 91       	pop	r25
    106c:	8f 91       	pop	r24
    106e:	0f 90       	pop	r0
    1070:	0f be       	out	0x3f, r0	; 63
    1072:	0f 90       	pop	r0
    1074:	1f 90       	pop	r1
    1076:	18 95       	reti

00001078 <PWM0_init>:
	OCR1A = dutyCycle;
}

void PWM1B(int dutyCycle)
{
	OCR1B = dutyCycle;
    1078:	83 b7       	in	r24, 0x33	; 51
    107a:	88 64       	ori	r24, 0x48	; 72
    107c:	83 bf       	out	0x33, r24	; 51
    107e:	83 b7       	in	r24, 0x33	; 51
    1080:	80 62       	ori	r24, 0x20	; 32
    1082:	83 bf       	out	0x33, r24	; 51
    1084:	83 b7       	in	r24, 0x33	; 51
    1086:	81 60       	ori	r24, 0x01	; 1
    1088:	83 bf       	out	0x33, r24	; 51
    108a:	08 95       	ret

0000108c <PWM2_init>:
    108c:	85 b5       	in	r24, 0x25	; 37
    108e:	88 64       	ori	r24, 0x48	; 72
    1090:	85 bd       	out	0x25, r24	; 37
    1092:	85 b5       	in	r24, 0x25	; 37
    1094:	80 62       	ori	r24, 0x20	; 32
    1096:	85 bd       	out	0x25, r24	; 37
    1098:	85 b5       	in	r24, 0x25	; 37
    109a:	81 60       	ori	r24, 0x01	; 1
    109c:	85 bd       	out	0x25, r24	; 37
    109e:	08 95       	ret

000010a0 <PWM0>:
    10a0:	8c bf       	out	0x3c, r24	; 60
    10a2:	08 95       	ret

000010a4 <PWM2>:
}

void PWM2(int dutyCycle)
{
	OCR2 = dutyCycle;
    10a4:	83 bd       	out	0x23, r24	; 35
    10a6:	08 95       	ret

000010a8 <UART_init>:
#include "serial_lib.h"

void UART_init(void)
{
	UCSRC &= ~(1 << UMSEL);						// Asynchronous Mode Selection
    10a8:	80 b5       	in	r24, 0x20	; 32
    10aa:	8f 7b       	andi	r24, 0xBF	; 191
    10ac:	80 bd       	out	0x20, r24	; 32
	UCSRA &= ~(1 << U2X);						// Normal Transmission Mode
    10ae:	59 98       	cbi	0x0b, 1	; 11
	UBRRH = 0;
    10b0:	10 bc       	out	0x20, r1	; 32
	UBRRL = 103;
    10b2:	87 e6       	ldi	r24, 0x67	; 103
    10b4:	89 b9       	out	0x09, r24	; 9
	UCSRB |= (1 << RXEN) | (1 << TXEN);
    10b6:	8a b1       	in	r24, 0x0a	; 10
    10b8:	88 61       	ori	r24, 0x18	; 24
    10ba:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << USBS) | (3 << UCSZ0);
    10bc:	80 b5       	in	r24, 0x20	; 32
    10be:	8e 68       	ori	r24, 0x8E	; 142
    10c0:	80 bd       	out	0x20, r24	; 32
    10c2:	08 95       	ret

000010c4 <__subsf3>:
    10c4:	50 58       	subi	r21, 0x80	; 128

000010c6 <__addsf3>:
    10c6:	bb 27       	eor	r27, r27
    10c8:	aa 27       	eor	r26, r26
    10ca:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <__addsf3x>
    10ce:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__fp_round>
    10d2:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fp_pscA>
    10d6:	38 f0       	brcs	.+14     	; 0x10e6 <__addsf3+0x20>
    10d8:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fp_pscB>
    10dc:	20 f0       	brcs	.+8      	; 0x10e6 <__addsf3+0x20>
    10de:	39 f4       	brne	.+14     	; 0x10ee <__addsf3+0x28>
    10e0:	9f 3f       	cpi	r25, 0xFF	; 255
    10e2:	19 f4       	brne	.+6      	; 0x10ea <__addsf3+0x24>
    10e4:	26 f4       	brtc	.+8      	; 0x10ee <__addsf3+0x28>
    10e6:	0c 94 48 09 	jmp	0x1290	; 0x1290 <__fp_nan>
    10ea:	0e f4       	brtc	.+2      	; 0x10ee <__addsf3+0x28>
    10ec:	e0 95       	com	r30
    10ee:	e7 fb       	bst	r30, 7
    10f0:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_inf>

000010f4 <__addsf3x>:
    10f4:	e9 2f       	mov	r30, r25
    10f6:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__fp_split3>
    10fa:	58 f3       	brcs	.-42     	; 0x10d2 <__addsf3+0xc>
    10fc:	ba 17       	cp	r27, r26
    10fe:	62 07       	cpc	r22, r18
    1100:	73 07       	cpc	r23, r19
    1102:	84 07       	cpc	r24, r20
    1104:	95 07       	cpc	r25, r21
    1106:	20 f0       	brcs	.+8      	; 0x1110 <__addsf3x+0x1c>
    1108:	79 f4       	brne	.+30     	; 0x1128 <__addsf3x+0x34>
    110a:	a6 f5       	brtc	.+104    	; 0x1174 <__addsf3x+0x80>
    110c:	0c 94 8c 09 	jmp	0x1318	; 0x1318 <__fp_zero>
    1110:	0e f4       	brtc	.+2      	; 0x1114 <__addsf3x+0x20>
    1112:	e0 95       	com	r30
    1114:	0b 2e       	mov	r0, r27
    1116:	ba 2f       	mov	r27, r26
    1118:	a0 2d       	mov	r26, r0
    111a:	0b 01       	movw	r0, r22
    111c:	b9 01       	movw	r22, r18
    111e:	90 01       	movw	r18, r0
    1120:	0c 01       	movw	r0, r24
    1122:	ca 01       	movw	r24, r20
    1124:	a0 01       	movw	r20, r0
    1126:	11 24       	eor	r1, r1
    1128:	ff 27       	eor	r31, r31
    112a:	59 1b       	sub	r21, r25
    112c:	99 f0       	breq	.+38     	; 0x1154 <__addsf3x+0x60>
    112e:	59 3f       	cpi	r21, 0xF9	; 249
    1130:	50 f4       	brcc	.+20     	; 0x1146 <__addsf3x+0x52>
    1132:	50 3e       	cpi	r21, 0xE0	; 224
    1134:	68 f1       	brcs	.+90     	; 0x1190 <__addsf3x+0x9c>
    1136:	1a 16       	cp	r1, r26
    1138:	f0 40       	sbci	r31, 0x00	; 0
    113a:	a2 2f       	mov	r26, r18
    113c:	23 2f       	mov	r18, r19
    113e:	34 2f       	mov	r19, r20
    1140:	44 27       	eor	r20, r20
    1142:	58 5f       	subi	r21, 0xF8	; 248
    1144:	f3 cf       	rjmp	.-26     	; 0x112c <__addsf3x+0x38>
    1146:	46 95       	lsr	r20
    1148:	37 95       	ror	r19
    114a:	27 95       	ror	r18
    114c:	a7 95       	ror	r26
    114e:	f0 40       	sbci	r31, 0x00	; 0
    1150:	53 95       	inc	r21
    1152:	c9 f7       	brne	.-14     	; 0x1146 <__addsf3x+0x52>
    1154:	7e f4       	brtc	.+30     	; 0x1174 <__addsf3x+0x80>
    1156:	1f 16       	cp	r1, r31
    1158:	ba 0b       	sbc	r27, r26
    115a:	62 0b       	sbc	r22, r18
    115c:	73 0b       	sbc	r23, r19
    115e:	84 0b       	sbc	r24, r20
    1160:	ba f0       	brmi	.+46     	; 0x1190 <__addsf3x+0x9c>
    1162:	91 50       	subi	r25, 0x01	; 1
    1164:	a1 f0       	breq	.+40     	; 0x118e <__addsf3x+0x9a>
    1166:	ff 0f       	add	r31, r31
    1168:	bb 1f       	adc	r27, r27
    116a:	66 1f       	adc	r22, r22
    116c:	77 1f       	adc	r23, r23
    116e:	88 1f       	adc	r24, r24
    1170:	c2 f7       	brpl	.-16     	; 0x1162 <__addsf3x+0x6e>
    1172:	0e c0       	rjmp	.+28     	; 0x1190 <__addsf3x+0x9c>
    1174:	ba 0f       	add	r27, r26
    1176:	62 1f       	adc	r22, r18
    1178:	73 1f       	adc	r23, r19
    117a:	84 1f       	adc	r24, r20
    117c:	48 f4       	brcc	.+18     	; 0x1190 <__addsf3x+0x9c>
    117e:	87 95       	ror	r24
    1180:	77 95       	ror	r23
    1182:	67 95       	ror	r22
    1184:	b7 95       	ror	r27
    1186:	f7 95       	ror	r31
    1188:	9e 3f       	cpi	r25, 0xFE	; 254
    118a:	08 f0       	brcs	.+2      	; 0x118e <__addsf3x+0x9a>
    118c:	b0 cf       	rjmp	.-160    	; 0x10ee <__addsf3+0x28>
    118e:	93 95       	inc	r25
    1190:	88 0f       	add	r24, r24
    1192:	08 f0       	brcs	.+2      	; 0x1196 <__addsf3x+0xa2>
    1194:	99 27       	eor	r25, r25
    1196:	ee 0f       	add	r30, r30
    1198:	97 95       	ror	r25
    119a:	87 95       	ror	r24
    119c:	08 95       	ret

0000119e <__fixsfsi>:
    119e:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__fixunssfsi>
    11a2:	68 94       	set
    11a4:	b1 11       	cpse	r27, r1
    11a6:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__fp_szero>
    11aa:	08 95       	ret

000011ac <__fixunssfsi>:
    11ac:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__fp_splitA>
    11b0:	88 f0       	brcs	.+34     	; 0x11d4 <__fixunssfsi+0x28>
    11b2:	9f 57       	subi	r25, 0x7F	; 127
    11b4:	98 f0       	brcs	.+38     	; 0x11dc <__fixunssfsi+0x30>
    11b6:	b9 2f       	mov	r27, r25
    11b8:	99 27       	eor	r25, r25
    11ba:	b7 51       	subi	r27, 0x17	; 23
    11bc:	b0 f0       	brcs	.+44     	; 0x11ea <__fixunssfsi+0x3e>
    11be:	e1 f0       	breq	.+56     	; 0x11f8 <__fixunssfsi+0x4c>
    11c0:	66 0f       	add	r22, r22
    11c2:	77 1f       	adc	r23, r23
    11c4:	88 1f       	adc	r24, r24
    11c6:	99 1f       	adc	r25, r25
    11c8:	1a f0       	brmi	.+6      	; 0x11d0 <__fixunssfsi+0x24>
    11ca:	ba 95       	dec	r27
    11cc:	c9 f7       	brne	.-14     	; 0x11c0 <__fixunssfsi+0x14>
    11ce:	14 c0       	rjmp	.+40     	; 0x11f8 <__fixunssfsi+0x4c>
    11d0:	b1 30       	cpi	r27, 0x01	; 1
    11d2:	91 f0       	breq	.+36     	; 0x11f8 <__fixunssfsi+0x4c>
    11d4:	0e 94 8c 09 	call	0x1318	; 0x1318 <__fp_zero>
    11d8:	b1 e0       	ldi	r27, 0x01	; 1
    11da:	08 95       	ret
    11dc:	0c 94 8c 09 	jmp	0x1318	; 0x1318 <__fp_zero>
    11e0:	67 2f       	mov	r22, r23
    11e2:	78 2f       	mov	r23, r24
    11e4:	88 27       	eor	r24, r24
    11e6:	b8 5f       	subi	r27, 0xF8	; 248
    11e8:	39 f0       	breq	.+14     	; 0x11f8 <__fixunssfsi+0x4c>
    11ea:	b9 3f       	cpi	r27, 0xF9	; 249
    11ec:	cc f3       	brlt	.-14     	; 0x11e0 <__fixunssfsi+0x34>
    11ee:	86 95       	lsr	r24
    11f0:	77 95       	ror	r23
    11f2:	67 95       	ror	r22
    11f4:	b3 95       	inc	r27
    11f6:	d9 f7       	brne	.-10     	; 0x11ee <__fixunssfsi+0x42>
    11f8:	3e f4       	brtc	.+14     	; 0x1208 <__fixunssfsi+0x5c>
    11fa:	90 95       	com	r25
    11fc:	80 95       	com	r24
    11fe:	70 95       	com	r23
    1200:	61 95       	neg	r22
    1202:	7f 4f       	sbci	r23, 0xFF	; 255
    1204:	8f 4f       	sbci	r24, 0xFF	; 255
    1206:	9f 4f       	sbci	r25, 0xFF	; 255
    1208:	08 95       	ret

0000120a <__floatunsisf>:
    120a:	e8 94       	clt
    120c:	09 c0       	rjmp	.+18     	; 0x1220 <__floatsisf+0x12>

0000120e <__floatsisf>:
    120e:	97 fb       	bst	r25, 7
    1210:	3e f4       	brtc	.+14     	; 0x1220 <__floatsisf+0x12>
    1212:	90 95       	com	r25
    1214:	80 95       	com	r24
    1216:	70 95       	com	r23
    1218:	61 95       	neg	r22
    121a:	7f 4f       	sbci	r23, 0xFF	; 255
    121c:	8f 4f       	sbci	r24, 0xFF	; 255
    121e:	9f 4f       	sbci	r25, 0xFF	; 255
    1220:	99 23       	and	r25, r25
    1222:	a9 f0       	breq	.+42     	; 0x124e <__floatsisf+0x40>
    1224:	f9 2f       	mov	r31, r25
    1226:	96 e9       	ldi	r25, 0x96	; 150
    1228:	bb 27       	eor	r27, r27
    122a:	93 95       	inc	r25
    122c:	f6 95       	lsr	r31
    122e:	87 95       	ror	r24
    1230:	77 95       	ror	r23
    1232:	67 95       	ror	r22
    1234:	b7 95       	ror	r27
    1236:	f1 11       	cpse	r31, r1
    1238:	f8 cf       	rjmp	.-16     	; 0x122a <__floatsisf+0x1c>
    123a:	fa f4       	brpl	.+62     	; 0x127a <__floatsisf+0x6c>
    123c:	bb 0f       	add	r27, r27
    123e:	11 f4       	brne	.+4      	; 0x1244 <__floatsisf+0x36>
    1240:	60 ff       	sbrs	r22, 0
    1242:	1b c0       	rjmp	.+54     	; 0x127a <__floatsisf+0x6c>
    1244:	6f 5f       	subi	r22, 0xFF	; 255
    1246:	7f 4f       	sbci	r23, 0xFF	; 255
    1248:	8f 4f       	sbci	r24, 0xFF	; 255
    124a:	9f 4f       	sbci	r25, 0xFF	; 255
    124c:	16 c0       	rjmp	.+44     	; 0x127a <__floatsisf+0x6c>
    124e:	88 23       	and	r24, r24
    1250:	11 f0       	breq	.+4      	; 0x1256 <__floatsisf+0x48>
    1252:	96 e9       	ldi	r25, 0x96	; 150
    1254:	11 c0       	rjmp	.+34     	; 0x1278 <__floatsisf+0x6a>
    1256:	77 23       	and	r23, r23
    1258:	21 f0       	breq	.+8      	; 0x1262 <__floatsisf+0x54>
    125a:	9e e8       	ldi	r25, 0x8E	; 142
    125c:	87 2f       	mov	r24, r23
    125e:	76 2f       	mov	r23, r22
    1260:	05 c0       	rjmp	.+10     	; 0x126c <__floatsisf+0x5e>
    1262:	66 23       	and	r22, r22
    1264:	71 f0       	breq	.+28     	; 0x1282 <__floatsisf+0x74>
    1266:	96 e8       	ldi	r25, 0x86	; 134
    1268:	86 2f       	mov	r24, r22
    126a:	70 e0       	ldi	r23, 0x00	; 0
    126c:	60 e0       	ldi	r22, 0x00	; 0
    126e:	2a f0       	brmi	.+10     	; 0x127a <__floatsisf+0x6c>
    1270:	9a 95       	dec	r25
    1272:	66 0f       	add	r22, r22
    1274:	77 1f       	adc	r23, r23
    1276:	88 1f       	adc	r24, r24
    1278:	da f7       	brpl	.-10     	; 0x1270 <__floatsisf+0x62>
    127a:	88 0f       	add	r24, r24
    127c:	96 95       	lsr	r25
    127e:	87 95       	ror	r24
    1280:	97 f9       	bld	r25, 7
    1282:	08 95       	ret

00001284 <__fp_inf>:
    1284:	97 f9       	bld	r25, 7
    1286:	9f 67       	ori	r25, 0x7F	; 127
    1288:	80 e8       	ldi	r24, 0x80	; 128
    128a:	70 e0       	ldi	r23, 0x00	; 0
    128c:	60 e0       	ldi	r22, 0x00	; 0
    128e:	08 95       	ret

00001290 <__fp_nan>:
    1290:	9f ef       	ldi	r25, 0xFF	; 255
    1292:	80 ec       	ldi	r24, 0xC0	; 192
    1294:	08 95       	ret

00001296 <__fp_pscA>:
    1296:	00 24       	eor	r0, r0
    1298:	0a 94       	dec	r0
    129a:	16 16       	cp	r1, r22
    129c:	17 06       	cpc	r1, r23
    129e:	18 06       	cpc	r1, r24
    12a0:	09 06       	cpc	r0, r25
    12a2:	08 95       	ret

000012a4 <__fp_pscB>:
    12a4:	00 24       	eor	r0, r0
    12a6:	0a 94       	dec	r0
    12a8:	12 16       	cp	r1, r18
    12aa:	13 06       	cpc	r1, r19
    12ac:	14 06       	cpc	r1, r20
    12ae:	05 06       	cpc	r0, r21
    12b0:	08 95       	ret

000012b2 <__fp_round>:
    12b2:	09 2e       	mov	r0, r25
    12b4:	03 94       	inc	r0
    12b6:	00 0c       	add	r0, r0
    12b8:	11 f4       	brne	.+4      	; 0x12be <__fp_round+0xc>
    12ba:	88 23       	and	r24, r24
    12bc:	52 f0       	brmi	.+20     	; 0x12d2 <__fp_round+0x20>
    12be:	bb 0f       	add	r27, r27
    12c0:	40 f4       	brcc	.+16     	; 0x12d2 <__fp_round+0x20>
    12c2:	bf 2b       	or	r27, r31
    12c4:	11 f4       	brne	.+4      	; 0x12ca <__fp_round+0x18>
    12c6:	60 ff       	sbrs	r22, 0
    12c8:	04 c0       	rjmp	.+8      	; 0x12d2 <__fp_round+0x20>
    12ca:	6f 5f       	subi	r22, 0xFF	; 255
    12cc:	7f 4f       	sbci	r23, 0xFF	; 255
    12ce:	8f 4f       	sbci	r24, 0xFF	; 255
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	08 95       	ret

000012d4 <__fp_split3>:
    12d4:	57 fd       	sbrc	r21, 7
    12d6:	90 58       	subi	r25, 0x80	; 128
    12d8:	44 0f       	add	r20, r20
    12da:	55 1f       	adc	r21, r21
    12dc:	59 f0       	breq	.+22     	; 0x12f4 <__fp_splitA+0x10>
    12de:	5f 3f       	cpi	r21, 0xFF	; 255
    12e0:	71 f0       	breq	.+28     	; 0x12fe <__fp_splitA+0x1a>
    12e2:	47 95       	ror	r20

000012e4 <__fp_splitA>:
    12e4:	88 0f       	add	r24, r24
    12e6:	97 fb       	bst	r25, 7
    12e8:	99 1f       	adc	r25, r25
    12ea:	61 f0       	breq	.+24     	; 0x1304 <__fp_splitA+0x20>
    12ec:	9f 3f       	cpi	r25, 0xFF	; 255
    12ee:	79 f0       	breq	.+30     	; 0x130e <__fp_splitA+0x2a>
    12f0:	87 95       	ror	r24
    12f2:	08 95       	ret
    12f4:	12 16       	cp	r1, r18
    12f6:	13 06       	cpc	r1, r19
    12f8:	14 06       	cpc	r1, r20
    12fa:	55 1f       	adc	r21, r21
    12fc:	f2 cf       	rjmp	.-28     	; 0x12e2 <__fp_split3+0xe>
    12fe:	46 95       	lsr	r20
    1300:	f1 df       	rcall	.-30     	; 0x12e4 <__fp_splitA>
    1302:	08 c0       	rjmp	.+16     	; 0x1314 <__fp_splitA+0x30>
    1304:	16 16       	cp	r1, r22
    1306:	17 06       	cpc	r1, r23
    1308:	18 06       	cpc	r1, r24
    130a:	99 1f       	adc	r25, r25
    130c:	f1 cf       	rjmp	.-30     	; 0x12f0 <__fp_splitA+0xc>
    130e:	86 95       	lsr	r24
    1310:	71 05       	cpc	r23, r1
    1312:	61 05       	cpc	r22, r1
    1314:	08 94       	sec
    1316:	08 95       	ret

00001318 <__fp_zero>:
    1318:	e8 94       	clt

0000131a <__fp_szero>:
    131a:	bb 27       	eor	r27, r27
    131c:	66 27       	eor	r22, r22
    131e:	77 27       	eor	r23, r23
    1320:	cb 01       	movw	r24, r22
    1322:	97 f9       	bld	r25, 7
    1324:	08 95       	ret

00001326 <__mulsf3>:
    1326:	0e 94 a6 09 	call	0x134c	; 0x134c <__mulsf3x>
    132a:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__fp_round>
    132e:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fp_pscA>
    1332:	38 f0       	brcs	.+14     	; 0x1342 <__mulsf3+0x1c>
    1334:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fp_pscB>
    1338:	20 f0       	brcs	.+8      	; 0x1342 <__mulsf3+0x1c>
    133a:	95 23       	and	r25, r21
    133c:	11 f0       	breq	.+4      	; 0x1342 <__mulsf3+0x1c>
    133e:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_inf>
    1342:	0c 94 48 09 	jmp	0x1290	; 0x1290 <__fp_nan>
    1346:	11 24       	eor	r1, r1
    1348:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__fp_szero>

0000134c <__mulsf3x>:
    134c:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__fp_split3>
    1350:	70 f3       	brcs	.-36     	; 0x132e <__mulsf3+0x8>

00001352 <__mulsf3_pse>:
    1352:	95 9f       	mul	r25, r21
    1354:	c1 f3       	breq	.-16     	; 0x1346 <__mulsf3+0x20>
    1356:	95 0f       	add	r25, r21
    1358:	50 e0       	ldi	r21, 0x00	; 0
    135a:	55 1f       	adc	r21, r21
    135c:	62 9f       	mul	r22, r18
    135e:	f0 01       	movw	r30, r0
    1360:	72 9f       	mul	r23, r18
    1362:	bb 27       	eor	r27, r27
    1364:	f0 0d       	add	r31, r0
    1366:	b1 1d       	adc	r27, r1
    1368:	63 9f       	mul	r22, r19
    136a:	aa 27       	eor	r26, r26
    136c:	f0 0d       	add	r31, r0
    136e:	b1 1d       	adc	r27, r1
    1370:	aa 1f       	adc	r26, r26
    1372:	64 9f       	mul	r22, r20
    1374:	66 27       	eor	r22, r22
    1376:	b0 0d       	add	r27, r0
    1378:	a1 1d       	adc	r26, r1
    137a:	66 1f       	adc	r22, r22
    137c:	82 9f       	mul	r24, r18
    137e:	22 27       	eor	r18, r18
    1380:	b0 0d       	add	r27, r0
    1382:	a1 1d       	adc	r26, r1
    1384:	62 1f       	adc	r22, r18
    1386:	73 9f       	mul	r23, r19
    1388:	b0 0d       	add	r27, r0
    138a:	a1 1d       	adc	r26, r1
    138c:	62 1f       	adc	r22, r18
    138e:	83 9f       	mul	r24, r19
    1390:	a0 0d       	add	r26, r0
    1392:	61 1d       	adc	r22, r1
    1394:	22 1f       	adc	r18, r18
    1396:	74 9f       	mul	r23, r20
    1398:	33 27       	eor	r19, r19
    139a:	a0 0d       	add	r26, r0
    139c:	61 1d       	adc	r22, r1
    139e:	23 1f       	adc	r18, r19
    13a0:	84 9f       	mul	r24, r20
    13a2:	60 0d       	add	r22, r0
    13a4:	21 1d       	adc	r18, r1
    13a6:	82 2f       	mov	r24, r18
    13a8:	76 2f       	mov	r23, r22
    13aa:	6a 2f       	mov	r22, r26
    13ac:	11 24       	eor	r1, r1
    13ae:	9f 57       	subi	r25, 0x7F	; 127
    13b0:	50 40       	sbci	r21, 0x00	; 0
    13b2:	9a f0       	brmi	.+38     	; 0x13da <__mulsf3_pse+0x88>
    13b4:	f1 f0       	breq	.+60     	; 0x13f2 <__mulsf3_pse+0xa0>
    13b6:	88 23       	and	r24, r24
    13b8:	4a f0       	brmi	.+18     	; 0x13cc <__mulsf3_pse+0x7a>
    13ba:	ee 0f       	add	r30, r30
    13bc:	ff 1f       	adc	r31, r31
    13be:	bb 1f       	adc	r27, r27
    13c0:	66 1f       	adc	r22, r22
    13c2:	77 1f       	adc	r23, r23
    13c4:	88 1f       	adc	r24, r24
    13c6:	91 50       	subi	r25, 0x01	; 1
    13c8:	50 40       	sbci	r21, 0x00	; 0
    13ca:	a9 f7       	brne	.-22     	; 0x13b6 <__mulsf3_pse+0x64>
    13cc:	9e 3f       	cpi	r25, 0xFE	; 254
    13ce:	51 05       	cpc	r21, r1
    13d0:	80 f0       	brcs	.+32     	; 0x13f2 <__mulsf3_pse+0xa0>
    13d2:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_inf>
    13d6:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__fp_szero>
    13da:	5f 3f       	cpi	r21, 0xFF	; 255
    13dc:	e4 f3       	brlt	.-8      	; 0x13d6 <__mulsf3_pse+0x84>
    13de:	98 3e       	cpi	r25, 0xE8	; 232
    13e0:	d4 f3       	brlt	.-12     	; 0x13d6 <__mulsf3_pse+0x84>
    13e2:	86 95       	lsr	r24
    13e4:	77 95       	ror	r23
    13e6:	67 95       	ror	r22
    13e8:	b7 95       	ror	r27
    13ea:	f7 95       	ror	r31
    13ec:	e7 95       	ror	r30
    13ee:	9f 5f       	subi	r25, 0xFF	; 255
    13f0:	c1 f7       	brne	.-16     	; 0x13e2 <__mulsf3_pse+0x90>
    13f2:	fe 2b       	or	r31, r30
    13f4:	88 0f       	add	r24, r24
    13f6:	91 1d       	adc	r25, r1
    13f8:	96 95       	lsr	r25
    13fa:	87 95       	ror	r24
    13fc:	97 f9       	bld	r25, 7
    13fe:	08 95       	ret

00001400 <__divmodhi4>:
    1400:	97 fb       	bst	r25, 7
    1402:	07 2e       	mov	r0, r23
    1404:	16 f4       	brtc	.+4      	; 0x140a <__divmodhi4+0xa>
    1406:	00 94       	com	r0
    1408:	07 d0       	rcall	.+14     	; 0x1418 <__divmodhi4_neg1>
    140a:	77 fd       	sbrc	r23, 7
    140c:	09 d0       	rcall	.+18     	; 0x1420 <__divmodhi4_neg2>
    140e:	0e 94 14 0a 	call	0x1428	; 0x1428 <__udivmodhi4>
    1412:	07 fc       	sbrc	r0, 7
    1414:	05 d0       	rcall	.+10     	; 0x1420 <__divmodhi4_neg2>
    1416:	3e f4       	brtc	.+14     	; 0x1426 <__divmodhi4_exit>

00001418 <__divmodhi4_neg1>:
    1418:	90 95       	com	r25
    141a:	81 95       	neg	r24
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	08 95       	ret

00001420 <__divmodhi4_neg2>:
    1420:	70 95       	com	r23
    1422:	61 95       	neg	r22
    1424:	7f 4f       	sbci	r23, 0xFF	; 255

00001426 <__divmodhi4_exit>:
    1426:	08 95       	ret

00001428 <__udivmodhi4>:
    1428:	aa 1b       	sub	r26, r26
    142a:	bb 1b       	sub	r27, r27
    142c:	51 e1       	ldi	r21, 0x11	; 17
    142e:	07 c0       	rjmp	.+14     	; 0x143e <__udivmodhi4_ep>

00001430 <__udivmodhi4_loop>:
    1430:	aa 1f       	adc	r26, r26
    1432:	bb 1f       	adc	r27, r27
    1434:	a6 17       	cp	r26, r22
    1436:	b7 07       	cpc	r27, r23
    1438:	10 f0       	brcs	.+4      	; 0x143e <__udivmodhi4_ep>
    143a:	a6 1b       	sub	r26, r22
    143c:	b7 0b       	sbc	r27, r23

0000143e <__udivmodhi4_ep>:
    143e:	88 1f       	adc	r24, r24
    1440:	99 1f       	adc	r25, r25
    1442:	5a 95       	dec	r21
    1444:	a9 f7       	brne	.-22     	; 0x1430 <__udivmodhi4_loop>
    1446:	80 95       	com	r24
    1448:	90 95       	com	r25
    144a:	bc 01       	movw	r22, r24
    144c:	cd 01       	movw	r24, r26
    144e:	08 95       	ret

00001450 <_exit>:
    1450:	f8 94       	cli

00001452 <__stop_program>:
    1452:	ff cf       	rjmp	.-2      	; 0x1452 <__stop_program>
