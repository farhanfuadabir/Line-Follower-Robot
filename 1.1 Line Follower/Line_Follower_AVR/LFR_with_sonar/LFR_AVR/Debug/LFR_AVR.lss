
LFR_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000005c0  00000654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  0080006a  0080006a  0000065e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000065e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000690  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  000006cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000112e  00000000  00000000  0000083c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004d8  00000000  00000000  0000196a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001092  00000000  00000000  00001e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000340  00000000  00000000  00002ed4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000675  00000000  00000000  00003214  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000798  00000000  00000000  00003889  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00004021  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ec       	ldi	r30, 0xC0	; 192
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 36       	cpi	r26, 0x6F	; 111
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 c5 00 	call	0x18a	; 0x18a <main>
  8a:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <sonar1Read>:
	GICR = (1 << INT1)/* | (1 << INT0) | (1 << INT2)*/;		// Enable Interrupt 0, Interrupt 1, Interrupt 2
}

void TIMER0_2_INT_init(void)
{
	TIMSK |= (1 << TOIE1)/* | (1 << TOIE1) | (1 << TOIE2)*/;				// Enable Timer Overflow Interrupt 0, Timer Overflow Interrupt 2
  92:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
  96:	94 98       	cbi	0x12, 4	; 18
  98:	94 9a       	sbi	0x12, 4	; 18
  9a:	35 e3       	ldi	r19, 0x35	; 53
  9c:	3a 95       	dec	r19
  9e:	f1 f7       	brne	.-4      	; 0x9c <sonar1Read+0xa>
  a0:	00 00       	nop
  a2:	94 98       	cbi	0x12, 4	; 18
  a4:	21 e0       	ldi	r18, 0x01	; 1
  a6:	31 c0       	rjmp	.+98     	; 0x10a <sonar1Read+0x78>
  a8:	8e b5       	in	r24, 0x2e	; 46
  aa:	82 60       	ori	r24, 0x02	; 2
  ac:	8e bd       	out	0x2e, r24	; 46
  ae:	83 9b       	sbis	0x10, 3	; 16
  b0:	21 c0       	rjmp	.+66     	; 0xf4 <sonar1Read+0x62>
  b2:	1d bc       	out	0x2d, r1	; 45
  b4:	1c bc       	out	0x2c, r1	; 44
  b6:	8e b5       	in	r24, 0x2e	; 46
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	8e bd       	out	0x2e, r24	; 46
  bc:	0b c0       	rjmp	.+22     	; 0xd4 <sonar1Read+0x42>
  be:	8c b5       	in	r24, 0x2c	; 44
  c0:	9d b5       	in	r25, 0x2d	; 45
  c2:	89 38       	cpi	r24, 0x89	; 137
  c4:	93 41       	sbci	r25, 0x13	; 19
  c6:	30 f0       	brcs	.+12     	; 0xd4 <sonar1Read+0x42>
  c8:	1e bc       	out	0x2e, r1	; 46
  ca:	1d bc       	out	0x2d, r1	; 45
  cc:	1c bc       	out	0x2c, r1	; 44
  ce:	8f e6       	ldi	r24, 0x6F	; 111
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	08 95       	ret
  d4:	83 99       	sbic	0x10, 3	; 16
  d6:	f3 cf       	rjmp	.-26     	; 0xbe <sonar1Read+0x2c>
  d8:	1e bc       	out	0x2e, r1	; 46
  da:	8c b5       	in	r24, 0x2c	; 44
  dc:	9d b5       	in	r25, 0x2d	; 45
  de:	96 95       	lsr	r25
  e0:	87 95       	ror	r24
  e2:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <pulse1+0x1>
  e6:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <pulse1>
  ea:	1d bc       	out	0x2d, r1	; 45
  ec:	1c bc       	out	0x2c, r1	; 44
  ee:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <__data_end>
  f2:	0b c0       	rjmp	.+22     	; 0x10a <sonar1Read+0x78>
  f4:	8c b5       	in	r24, 0x2c	; 44
  f6:	9d b5       	in	r25, 0x2d	; 45
  f8:	81 31       	cpi	r24, 0x11	; 17
  fa:	97 42       	sbci	r25, 0x27	; 39
  fc:	30 f0       	brcs	.+12     	; 0x10a <sonar1Read+0x78>
  fe:	1e bc       	out	0x2e, r1	; 46
 100:	1d bc       	out	0x2d, r1	; 45
 102:	1c bc       	out	0x2c, r1	; 44
 104:	80 e7       	ldi	r24, 0x70	; 112
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	08 95       	ret
 10a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 10e:	88 23       	and	r24, r24
 110:	59 f2       	breq	.-106    	; 0xa8 <sonar1Read+0x16>
 112:	60 91 6d 00 	lds	r22, 0x006D	; 0x80006d <pulse1>
 116:	70 91 6e 00 	lds	r23, 0x006E	; 0x80006e <pulse1+0x1>
 11a:	07 2e       	mov	r0, r23
 11c:	00 0c       	add	r0, r0
 11e:	88 0b       	sbc	r24, r24
 120:	99 0b       	sbc	r25, r25
 122:	0e 94 a5 01 	call	0x34a	; 0x34a <__floatsisf>
 126:	29 e2       	ldi	r18, 0x29	; 41
 128:	3c e5       	ldi	r19, 0x5C	; 92
 12a:	4f e0       	ldi	r20, 0x0F	; 15
 12c:	5d e3       	ldi	r21, 0x3D	; 61
 12e:	0e 94 31 02 	call	0x462	; 0x462 <__mulsf3>
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	40 e0       	ldi	r20, 0x00	; 0
 138:	5f e3       	ldi	r21, 0x3F	; 63
 13a:	0e 94 31 02 	call	0x462	; 0x462 <__mulsf3>
 13e:	0e 94 74 01 	call	0x2e8	; 0x2e8 <__fixunssfsi>
 142:	cb 01       	movw	r24, r22
 144:	08 95       	ret

00000146 <setRotationForward>:
 146:	80 e0       	ldi	r24, 0x00	; 0
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	0e 94 30 01 	call	0x260	; 0x260 <PWM0>
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 32 01 	call	0x264	; 0x264 <PWM2>
 156:	af 9a       	sbi	0x15, 7	; 21
 158:	ae 98       	cbi	0x15, 6	; 21
 15a:	ad 9a       	sbi	0x15, 5	; 21
 15c:	ac 98       	cbi	0x15, 4	; 21
 15e:	08 95       	ret

00000160 <Forward>:
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	0e 94 30 01 	call	0x260	; 0x260 <PWM0>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	0e 94 32 01 	call	0x264	; 0x264 <PWM2>
 170:	af 9a       	sbi	0x15, 7	; 21
 172:	ae 98       	cbi	0x15, 6	; 21
 174:	ad 9a       	sbi	0x15, 5	; 21
 176:	ac 98       	cbi	0x15, 4	; 21
 178:	88 ec       	ldi	r24, 0xC8	; 200
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	0e 94 30 01 	call	0x260	; 0x260 <PWM0>
 180:	88 ec       	ldi	r24, 0xC8	; 200
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 32 01 	call	0x264	; 0x264 <PWM2>
 188:	08 95       	ret

0000018a <main>:
 18a:	8c 9a       	sbi	0x11, 4	; 17
 18c:	8d 9a       	sbi	0x11, 5	; 17
 18e:	b9 9a       	sbi	0x17, 1	; 23
 190:	8b 98       	cbi	0x11, 3	; 17
 192:	8a 98       	cbi	0x11, 2	; 17
 194:	ba 98       	cbi	0x17, 2	; 23
 196:	a7 9a       	sbi	0x14, 7	; 20
 198:	a6 9a       	sbi	0x14, 6	; 20
 19a:	a5 9a       	sbi	0x14, 5	; 20
 19c:	a4 9a       	sbi	0x14, 4	; 20
 19e:	8f 9a       	sbi	0x11, 7	; 17
 1a0:	bb 9a       	sbi	0x17, 3	; 23
 1a2:	0e 94 34 01 	call	0x268	; 0x268 <UART_init>
 1a6:	0e 94 1c 01 	call	0x238	; 0x238 <PWM0_init>
 1aa:	0e 94 26 01 	call	0x24c	; 0x24c <PWM2_init>
 1ae:	0e 94 a3 00 	call	0x146	; 0x146 <setRotationForward>
 1b2:	0e 94 b0 00 	call	0x160	; 0x160 <Forward>
 1b6:	0e 94 49 00 	call	0x92	; 0x92 <sonar1Read>
 1ba:	6a e0       	ldi	r22, 0x0A	; 10
 1bc:	70 e0       	ldi	r23, 0x00	; 0
 1be:	0e 94 55 01 	call	0x2aa	; 0x2aa <Serial_sendInt>
 1c2:	80 e6       	ldi	r24, 0x60	; 96
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	0e 94 46 01 	call	0x28c	; 0x28c <Serial_sendString>
 1ca:	2f ef       	ldi	r18, 0xFF	; 255
 1cc:	80 e7       	ldi	r24, 0x70	; 112
 1ce:	92 e0       	ldi	r25, 0x02	; 2
 1d0:	21 50       	subi	r18, 0x01	; 1
 1d2:	80 40       	sbci	r24, 0x00	; 0
 1d4:	90 40       	sbci	r25, 0x00	; 0
 1d6:	e1 f7       	brne	.-8      	; 0x1d0 <main+0x46>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <main+0x50>
 1da:	00 00       	nop
 1dc:	ec cf       	rjmp	.-40     	; 0x1b6 <main+0x2c>

000001de <__vector_2>:
}

ISR (INT1_vect)
{
 1de:	1f 92       	push	r1
 1e0:	0f 92       	push	r0
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	0f 92       	push	r0
 1e6:	11 24       	eor	r1, r1
 1e8:	8f 93       	push	r24
 1ea:	9f 93       	push	r25
	if (echo == 0)
 1ec:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <echo>
 1f0:	81 11       	cpse	r24, r1
 1f2:	07 c0       	rjmp	.+14     	; 0x202 <__vector_2+0x24>
	{
		TCCR1B |= (1 << CS11)/* | (1 << CS10)*/;
 1f4:	8e b5       	in	r24, 0x2e	; 46
 1f6:	82 60       	ori	r24, 0x02	; 2
 1f8:	8e bd       	out	0x2e, r24	; 46
		echo = 1;
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <echo>
 200:	14 c0       	rjmp	.+40     	; 0x22a <__vector_2+0x4c>
	}
	else if (echo == 1)
 202:	81 30       	cpi	r24, 0x01	; 1
 204:	91 f4       	brne	.+36     	; 0x22a <__vector_2+0x4c>
	{
		TCCR1B = 0;
 206:	1e bc       	out	0x2e, r1	; 46
		pulse1 = TCNT1 / 2;
 208:	8c b5       	in	r24, 0x2c	; 44
 20a:	9d b5       	in	r25, 0x2d	; 45
 20c:	96 95       	lsr	r25
 20e:	87 95       	ror	r24
 210:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <pulse1+0x1>
 214:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <pulse1>
		
// 	Serial_sendString("T : ");
// 	Serial_sendInt(pulse1, DEC);
// 	 	Serial_sendString("\t");

		TCNT1 = 0;
 218:	1d bc       	out	0x2d, r1	; 45
 21a:	1c bc       	out	0x2c, r1	; 44
		echo = 0;
 21c:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <echo>
		sonar1_ack = 1;
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
		trig1_ack = 0;
 226:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <trig1_ack>
	}
}
 22a:	9f 91       	pop	r25
 22c:	8f 91       	pop	r24
 22e:	0f 90       	pop	r0
 230:	0f be       	out	0x3f, r0	; 63
 232:	0f 90       	pop	r0
 234:	1f 90       	pop	r1
 236:	18 95       	reti

00000238 <PWM0_init>:
	OCR1A = dutyCycle;
}

void PWM1B(int dutyCycle)
{
	OCR1B = dutyCycle;
 238:	83 b7       	in	r24, 0x33	; 51
 23a:	88 64       	ori	r24, 0x48	; 72
 23c:	83 bf       	out	0x33, r24	; 51
 23e:	83 b7       	in	r24, 0x33	; 51
 240:	80 62       	ori	r24, 0x20	; 32
 242:	83 bf       	out	0x33, r24	; 51
 244:	83 b7       	in	r24, 0x33	; 51
 246:	81 60       	ori	r24, 0x01	; 1
 248:	83 bf       	out	0x33, r24	; 51
 24a:	08 95       	ret

0000024c <PWM2_init>:
 24c:	85 b5       	in	r24, 0x25	; 37
 24e:	88 64       	ori	r24, 0x48	; 72
 250:	85 bd       	out	0x25, r24	; 37
 252:	85 b5       	in	r24, 0x25	; 37
 254:	80 62       	ori	r24, 0x20	; 32
 256:	85 bd       	out	0x25, r24	; 37
 258:	85 b5       	in	r24, 0x25	; 37
 25a:	81 60       	ori	r24, 0x01	; 1
 25c:	85 bd       	out	0x25, r24	; 37
 25e:	08 95       	ret

00000260 <PWM0>:
 260:	8c bf       	out	0x3c, r24	; 60
 262:	08 95       	ret

00000264 <PWM2>:
}

void PWM2(int dutyCycle)
{
	OCR2 = dutyCycle;
 264:	83 bd       	out	0x23, r24	; 35
 266:	08 95       	ret

00000268 <UART_init>:
#include "serial_lib.h"

void UART_init(void)
{
	UCSRC &= ~(1 << UMSEL);						// Asynchronous Mode Selection
 268:	80 b5       	in	r24, 0x20	; 32
 26a:	8f 7b       	andi	r24, 0xBF	; 191
 26c:	80 bd       	out	0x20, r24	; 32
	UCSRA &= ~(1 << U2X);						// Normal Transmission Mode
 26e:	59 98       	cbi	0x0b, 1	; 11
	UBRRH = 0;
 270:	10 bc       	out	0x20, r1	; 32
	UBRRL = 103;
 272:	87 e6       	ldi	r24, 0x67	; 103
 274:	89 b9       	out	0x09, r24	; 9
	UCSRB |= (1 << RXEN) | (1 << TXEN);
 276:	8a b1       	in	r24, 0x0a	; 10
 278:	88 61       	ori	r24, 0x18	; 24
 27a:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL) | (1 << USBS) | (3 << UCSZ0);
 27c:	80 b5       	in	r24, 0x20	; 32
 27e:	8e 68       	ori	r24, 0x8E	; 142
 280:	80 bd       	out	0x20, r24	; 32
 282:	08 95       	ret

00000284 <Serial_sendChar>:
	Serial_sendString(intBuffer);
}

void Serial_sendChar(char c)
{
	while (!(UCSRA & (1 << UDRE)));
 284:	5d 9b       	sbis	0x0b, 5	; 11
 286:	fe cf       	rjmp	.-4      	; 0x284 <Serial_sendChar>
	UDR = c;
 288:	8c b9       	out	0x0c, r24	; 12
 28a:	08 95       	ret

0000028c <Serial_sendString>:
}

void Serial_sendString(char *s)
{
 28c:	cf 93       	push	r28
 28e:	df 93       	push	r29
 290:	ec 01       	movw	r28, r24
	for(int i = 0; s[i] != '\0'; i++)
 292:	88 81       	ld	r24, Y
 294:	88 23       	and	r24, r24
 296:	31 f0       	breq	.+12     	; 0x2a4 <Serial_sendString+0x18>
 298:	21 96       	adiw	r28, 0x01	; 1
	{
		Serial_sendChar(s[i]);
 29a:	0e 94 42 01 	call	0x284	; 0x284 <Serial_sendChar>
	UDR = c;
}

void Serial_sendString(char *s)
{
	for(int i = 0; s[i] != '\0'; i++)
 29e:	89 91       	ld	r24, Y+
 2a0:	81 11       	cpse	r24, r1
 2a2:	fb cf       	rjmp	.-10     	; 0x29a <Serial_sendString+0xe>
	{
		Serial_sendChar(s[i]);
	}
}
 2a4:	df 91       	pop	r29
 2a6:	cf 91       	pop	r28
 2a8:	08 95       	ret

000002aa <Serial_sendInt>:
// 	
// 	UDR = data;
// }

void Serial_sendInt(unsigned int data, int intBase)
{
 2aa:	cf 93       	push	r28
 2ac:	df 93       	push	r29
 2ae:	cd b7       	in	r28, 0x3d	; 61
 2b0:	de b7       	in	r29, 0x3e	; 62
 2b2:	60 97       	sbiw	r28, 0x10	; 16
 2b4:	0f b6       	in	r0, 0x3f	; 63
 2b6:	f8 94       	cli
 2b8:	de bf       	out	0x3e, r29	; 62
 2ba:	0f be       	out	0x3f, r0	; 63
 2bc:	cd bf       	out	0x3d, r28	; 61
 2be:	ab 01       	movw	r20, r22
	while (!(UCSRA & (1 << UDRE)));
 2c0:	5d 9b       	sbis	0x0b, 5	; 11
 2c2:	fe cf       	rjmp	.-4      	; 0x2c0 <Serial_sendInt+0x16>
extern __inline__ __ATTR_GNU_INLINE__
char *itoa (int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__itoa (int, char *, int);
	return __itoa (__val, __s, __radix);
 2c4:	be 01       	movw	r22, r28
 2c6:	6f 5f       	subi	r22, 0xFF	; 255
 2c8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ca:	0e 94 9e 02 	call	0x53c	; 0x53c <itoa>
	char intBuffer[16];
	itoa(data, intBuffer, intBase);
	Serial_sendString(intBuffer);
 2ce:	ce 01       	movw	r24, r28
 2d0:	01 96       	adiw	r24, 0x01	; 1
 2d2:	0e 94 46 01 	call	0x28c	; 0x28c <Serial_sendString>
}
 2d6:	60 96       	adiw	r28, 0x10	; 16
 2d8:	0f b6       	in	r0, 0x3f	; 63
 2da:	f8 94       	cli
 2dc:	de bf       	out	0x3e, r29	; 62
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	cd bf       	out	0x3d, r28	; 61
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	08 95       	ret

000002e8 <__fixunssfsi>:
 2e8:	0e 94 10 02 	call	0x420	; 0x420 <__fp_splitA>
 2ec:	88 f0       	brcs	.+34     	; 0x310 <__fixunssfsi+0x28>
 2ee:	9f 57       	subi	r25, 0x7F	; 127
 2f0:	98 f0       	brcs	.+38     	; 0x318 <__fixunssfsi+0x30>
 2f2:	b9 2f       	mov	r27, r25
 2f4:	99 27       	eor	r25, r25
 2f6:	b7 51       	subi	r27, 0x17	; 23
 2f8:	b0 f0       	brcs	.+44     	; 0x326 <__fixunssfsi+0x3e>
 2fa:	e1 f0       	breq	.+56     	; 0x334 <__fixunssfsi+0x4c>
 2fc:	66 0f       	add	r22, r22
 2fe:	77 1f       	adc	r23, r23
 300:	88 1f       	adc	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	1a f0       	brmi	.+6      	; 0x30c <__fixunssfsi+0x24>
 306:	ba 95       	dec	r27
 308:	c9 f7       	brne	.-14     	; 0x2fc <__fixunssfsi+0x14>
 30a:	14 c0       	rjmp	.+40     	; 0x334 <__fixunssfsi+0x4c>
 30c:	b1 30       	cpi	r27, 0x01	; 1
 30e:	91 f0       	breq	.+36     	; 0x334 <__fixunssfsi+0x4c>
 310:	0e 94 2a 02 	call	0x454	; 0x454 <__fp_zero>
 314:	b1 e0       	ldi	r27, 0x01	; 1
 316:	08 95       	ret
 318:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_zero>
 31c:	67 2f       	mov	r22, r23
 31e:	78 2f       	mov	r23, r24
 320:	88 27       	eor	r24, r24
 322:	b8 5f       	subi	r27, 0xF8	; 248
 324:	39 f0       	breq	.+14     	; 0x334 <__fixunssfsi+0x4c>
 326:	b9 3f       	cpi	r27, 0xF9	; 249
 328:	cc f3       	brlt	.-14     	; 0x31c <__fixunssfsi+0x34>
 32a:	86 95       	lsr	r24
 32c:	77 95       	ror	r23
 32e:	67 95       	ror	r22
 330:	b3 95       	inc	r27
 332:	d9 f7       	brne	.-10     	; 0x32a <__fixunssfsi+0x42>
 334:	3e f4       	brtc	.+14     	; 0x344 <__fixunssfsi+0x5c>
 336:	90 95       	com	r25
 338:	80 95       	com	r24
 33a:	70 95       	com	r23
 33c:	61 95       	neg	r22
 33e:	7f 4f       	sbci	r23, 0xFF	; 255
 340:	8f 4f       	sbci	r24, 0xFF	; 255
 342:	9f 4f       	sbci	r25, 0xFF	; 255
 344:	08 95       	ret

00000346 <__floatunsisf>:
 346:	e8 94       	clt
 348:	09 c0       	rjmp	.+18     	; 0x35c <__floatsisf+0x12>

0000034a <__floatsisf>:
 34a:	97 fb       	bst	r25, 7
 34c:	3e f4       	brtc	.+14     	; 0x35c <__floatsisf+0x12>
 34e:	90 95       	com	r25
 350:	80 95       	com	r24
 352:	70 95       	com	r23
 354:	61 95       	neg	r22
 356:	7f 4f       	sbci	r23, 0xFF	; 255
 358:	8f 4f       	sbci	r24, 0xFF	; 255
 35a:	9f 4f       	sbci	r25, 0xFF	; 255
 35c:	99 23       	and	r25, r25
 35e:	a9 f0       	breq	.+42     	; 0x38a <__floatsisf+0x40>
 360:	f9 2f       	mov	r31, r25
 362:	96 e9       	ldi	r25, 0x96	; 150
 364:	bb 27       	eor	r27, r27
 366:	93 95       	inc	r25
 368:	f6 95       	lsr	r31
 36a:	87 95       	ror	r24
 36c:	77 95       	ror	r23
 36e:	67 95       	ror	r22
 370:	b7 95       	ror	r27
 372:	f1 11       	cpse	r31, r1
 374:	f8 cf       	rjmp	.-16     	; 0x366 <__floatsisf+0x1c>
 376:	fa f4       	brpl	.+62     	; 0x3b6 <__floatsisf+0x6c>
 378:	bb 0f       	add	r27, r27
 37a:	11 f4       	brne	.+4      	; 0x380 <__floatsisf+0x36>
 37c:	60 ff       	sbrs	r22, 0
 37e:	1b c0       	rjmp	.+54     	; 0x3b6 <__floatsisf+0x6c>
 380:	6f 5f       	subi	r22, 0xFF	; 255
 382:	7f 4f       	sbci	r23, 0xFF	; 255
 384:	8f 4f       	sbci	r24, 0xFF	; 255
 386:	9f 4f       	sbci	r25, 0xFF	; 255
 388:	16 c0       	rjmp	.+44     	; 0x3b6 <__floatsisf+0x6c>
 38a:	88 23       	and	r24, r24
 38c:	11 f0       	breq	.+4      	; 0x392 <__floatsisf+0x48>
 38e:	96 e9       	ldi	r25, 0x96	; 150
 390:	11 c0       	rjmp	.+34     	; 0x3b4 <__floatsisf+0x6a>
 392:	77 23       	and	r23, r23
 394:	21 f0       	breq	.+8      	; 0x39e <__floatsisf+0x54>
 396:	9e e8       	ldi	r25, 0x8E	; 142
 398:	87 2f       	mov	r24, r23
 39a:	76 2f       	mov	r23, r22
 39c:	05 c0       	rjmp	.+10     	; 0x3a8 <__floatsisf+0x5e>
 39e:	66 23       	and	r22, r22
 3a0:	71 f0       	breq	.+28     	; 0x3be <__floatsisf+0x74>
 3a2:	96 e8       	ldi	r25, 0x86	; 134
 3a4:	86 2f       	mov	r24, r22
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	60 e0       	ldi	r22, 0x00	; 0
 3aa:	2a f0       	brmi	.+10     	; 0x3b6 <__floatsisf+0x6c>
 3ac:	9a 95       	dec	r25
 3ae:	66 0f       	add	r22, r22
 3b0:	77 1f       	adc	r23, r23
 3b2:	88 1f       	adc	r24, r24
 3b4:	da f7       	brpl	.-10     	; 0x3ac <__floatsisf+0x62>
 3b6:	88 0f       	add	r24, r24
 3b8:	96 95       	lsr	r25
 3ba:	87 95       	ror	r24
 3bc:	97 f9       	bld	r25, 7
 3be:	08 95       	ret

000003c0 <__fp_inf>:
 3c0:	97 f9       	bld	r25, 7
 3c2:	9f 67       	ori	r25, 0x7F	; 127
 3c4:	80 e8       	ldi	r24, 0x80	; 128
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	60 e0       	ldi	r22, 0x00	; 0
 3ca:	08 95       	ret

000003cc <__fp_nan>:
 3cc:	9f ef       	ldi	r25, 0xFF	; 255
 3ce:	80 ec       	ldi	r24, 0xC0	; 192
 3d0:	08 95       	ret

000003d2 <__fp_pscA>:
 3d2:	00 24       	eor	r0, r0
 3d4:	0a 94       	dec	r0
 3d6:	16 16       	cp	r1, r22
 3d8:	17 06       	cpc	r1, r23
 3da:	18 06       	cpc	r1, r24
 3dc:	09 06       	cpc	r0, r25
 3de:	08 95       	ret

000003e0 <__fp_pscB>:
 3e0:	00 24       	eor	r0, r0
 3e2:	0a 94       	dec	r0
 3e4:	12 16       	cp	r1, r18
 3e6:	13 06       	cpc	r1, r19
 3e8:	14 06       	cpc	r1, r20
 3ea:	05 06       	cpc	r0, r21
 3ec:	08 95       	ret

000003ee <__fp_round>:
 3ee:	09 2e       	mov	r0, r25
 3f0:	03 94       	inc	r0
 3f2:	00 0c       	add	r0, r0
 3f4:	11 f4       	brne	.+4      	; 0x3fa <__fp_round+0xc>
 3f6:	88 23       	and	r24, r24
 3f8:	52 f0       	brmi	.+20     	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 3fa:	bb 0f       	add	r27, r27
 3fc:	40 f4       	brcc	.+16     	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 3fe:	bf 2b       	or	r27, r31
 400:	11 f4       	brne	.+4      	; 0x406 <__FUSE_REGION_LENGTH__+0x6>
 402:	60 ff       	sbrs	r22, 0
 404:	04 c0       	rjmp	.+8      	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 406:	6f 5f       	subi	r22, 0xFF	; 255
 408:	7f 4f       	sbci	r23, 0xFF	; 255
 40a:	8f 4f       	sbci	r24, 0xFF	; 255
 40c:	9f 4f       	sbci	r25, 0xFF	; 255
 40e:	08 95       	ret

00000410 <__fp_split3>:
 410:	57 fd       	sbrc	r21, 7
 412:	90 58       	subi	r25, 0x80	; 128
 414:	44 0f       	add	r20, r20
 416:	55 1f       	adc	r21, r21
 418:	59 f0       	breq	.+22     	; 0x430 <__fp_splitA+0x10>
 41a:	5f 3f       	cpi	r21, 0xFF	; 255
 41c:	71 f0       	breq	.+28     	; 0x43a <__fp_splitA+0x1a>
 41e:	47 95       	ror	r20

00000420 <__fp_splitA>:
 420:	88 0f       	add	r24, r24
 422:	97 fb       	bst	r25, 7
 424:	99 1f       	adc	r25, r25
 426:	61 f0       	breq	.+24     	; 0x440 <__fp_splitA+0x20>
 428:	9f 3f       	cpi	r25, 0xFF	; 255
 42a:	79 f0       	breq	.+30     	; 0x44a <__fp_splitA+0x2a>
 42c:	87 95       	ror	r24
 42e:	08 95       	ret
 430:	12 16       	cp	r1, r18
 432:	13 06       	cpc	r1, r19
 434:	14 06       	cpc	r1, r20
 436:	55 1f       	adc	r21, r21
 438:	f2 cf       	rjmp	.-28     	; 0x41e <__fp_split3+0xe>
 43a:	46 95       	lsr	r20
 43c:	f1 df       	rcall	.-30     	; 0x420 <__fp_splitA>
 43e:	08 c0       	rjmp	.+16     	; 0x450 <__fp_splitA+0x30>
 440:	16 16       	cp	r1, r22
 442:	17 06       	cpc	r1, r23
 444:	18 06       	cpc	r1, r24
 446:	99 1f       	adc	r25, r25
 448:	f1 cf       	rjmp	.-30     	; 0x42c <__fp_splitA+0xc>
 44a:	86 95       	lsr	r24
 44c:	71 05       	cpc	r23, r1
 44e:	61 05       	cpc	r22, r1
 450:	08 94       	sec
 452:	08 95       	ret

00000454 <__fp_zero>:
 454:	e8 94       	clt

00000456 <__fp_szero>:
 456:	bb 27       	eor	r27, r27
 458:	66 27       	eor	r22, r22
 45a:	77 27       	eor	r23, r23
 45c:	cb 01       	movw	r24, r22
 45e:	97 f9       	bld	r25, 7
 460:	08 95       	ret

00000462 <__mulsf3>:
 462:	0e 94 44 02 	call	0x488	; 0x488 <__mulsf3x>
 466:	0c 94 f7 01 	jmp	0x3ee	; 0x3ee <__fp_round>
 46a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__fp_pscA>
 46e:	38 f0       	brcs	.+14     	; 0x47e <__mulsf3+0x1c>
 470:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__fp_pscB>
 474:	20 f0       	brcs	.+8      	; 0x47e <__mulsf3+0x1c>
 476:	95 23       	and	r25, r21
 478:	11 f0       	breq	.+4      	; 0x47e <__mulsf3+0x1c>
 47a:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__fp_inf>
 47e:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__fp_nan>
 482:	11 24       	eor	r1, r1
 484:	0c 94 2b 02 	jmp	0x456	; 0x456 <__fp_szero>

00000488 <__mulsf3x>:
 488:	0e 94 08 02 	call	0x410	; 0x410 <__fp_split3>
 48c:	70 f3       	brcs	.-36     	; 0x46a <__mulsf3+0x8>

0000048e <__mulsf3_pse>:
 48e:	95 9f       	mul	r25, r21
 490:	c1 f3       	breq	.-16     	; 0x482 <__mulsf3+0x20>
 492:	95 0f       	add	r25, r21
 494:	50 e0       	ldi	r21, 0x00	; 0
 496:	55 1f       	adc	r21, r21
 498:	62 9f       	mul	r22, r18
 49a:	f0 01       	movw	r30, r0
 49c:	72 9f       	mul	r23, r18
 49e:	bb 27       	eor	r27, r27
 4a0:	f0 0d       	add	r31, r0
 4a2:	b1 1d       	adc	r27, r1
 4a4:	63 9f       	mul	r22, r19
 4a6:	aa 27       	eor	r26, r26
 4a8:	f0 0d       	add	r31, r0
 4aa:	b1 1d       	adc	r27, r1
 4ac:	aa 1f       	adc	r26, r26
 4ae:	64 9f       	mul	r22, r20
 4b0:	66 27       	eor	r22, r22
 4b2:	b0 0d       	add	r27, r0
 4b4:	a1 1d       	adc	r26, r1
 4b6:	66 1f       	adc	r22, r22
 4b8:	82 9f       	mul	r24, r18
 4ba:	22 27       	eor	r18, r18
 4bc:	b0 0d       	add	r27, r0
 4be:	a1 1d       	adc	r26, r1
 4c0:	62 1f       	adc	r22, r18
 4c2:	73 9f       	mul	r23, r19
 4c4:	b0 0d       	add	r27, r0
 4c6:	a1 1d       	adc	r26, r1
 4c8:	62 1f       	adc	r22, r18
 4ca:	83 9f       	mul	r24, r19
 4cc:	a0 0d       	add	r26, r0
 4ce:	61 1d       	adc	r22, r1
 4d0:	22 1f       	adc	r18, r18
 4d2:	74 9f       	mul	r23, r20
 4d4:	33 27       	eor	r19, r19
 4d6:	a0 0d       	add	r26, r0
 4d8:	61 1d       	adc	r22, r1
 4da:	23 1f       	adc	r18, r19
 4dc:	84 9f       	mul	r24, r20
 4de:	60 0d       	add	r22, r0
 4e0:	21 1d       	adc	r18, r1
 4e2:	82 2f       	mov	r24, r18
 4e4:	76 2f       	mov	r23, r22
 4e6:	6a 2f       	mov	r22, r26
 4e8:	11 24       	eor	r1, r1
 4ea:	9f 57       	subi	r25, 0x7F	; 127
 4ec:	50 40       	sbci	r21, 0x00	; 0
 4ee:	9a f0       	brmi	.+38     	; 0x516 <__mulsf3_pse+0x88>
 4f0:	f1 f0       	breq	.+60     	; 0x52e <__mulsf3_pse+0xa0>
 4f2:	88 23       	and	r24, r24
 4f4:	4a f0       	brmi	.+18     	; 0x508 <__mulsf3_pse+0x7a>
 4f6:	ee 0f       	add	r30, r30
 4f8:	ff 1f       	adc	r31, r31
 4fa:	bb 1f       	adc	r27, r27
 4fc:	66 1f       	adc	r22, r22
 4fe:	77 1f       	adc	r23, r23
 500:	88 1f       	adc	r24, r24
 502:	91 50       	subi	r25, 0x01	; 1
 504:	50 40       	sbci	r21, 0x00	; 0
 506:	a9 f7       	brne	.-22     	; 0x4f2 <__mulsf3_pse+0x64>
 508:	9e 3f       	cpi	r25, 0xFE	; 254
 50a:	51 05       	cpc	r21, r1
 50c:	80 f0       	brcs	.+32     	; 0x52e <__mulsf3_pse+0xa0>
 50e:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__fp_inf>
 512:	0c 94 2b 02 	jmp	0x456	; 0x456 <__fp_szero>
 516:	5f 3f       	cpi	r21, 0xFF	; 255
 518:	e4 f3       	brlt	.-8      	; 0x512 <__mulsf3_pse+0x84>
 51a:	98 3e       	cpi	r25, 0xE8	; 232
 51c:	d4 f3       	brlt	.-12     	; 0x512 <__mulsf3_pse+0x84>
 51e:	86 95       	lsr	r24
 520:	77 95       	ror	r23
 522:	67 95       	ror	r22
 524:	b7 95       	ror	r27
 526:	f7 95       	ror	r31
 528:	e7 95       	ror	r30
 52a:	9f 5f       	subi	r25, 0xFF	; 255
 52c:	c1 f7       	brne	.-16     	; 0x51e <__mulsf3_pse+0x90>
 52e:	fe 2b       	or	r31, r30
 530:	88 0f       	add	r24, r24
 532:	91 1d       	adc	r25, r1
 534:	96 95       	lsr	r25
 536:	87 95       	ror	r24
 538:	97 f9       	bld	r25, 7
 53a:	08 95       	ret

0000053c <itoa>:
 53c:	45 32       	cpi	r20, 0x25	; 37
 53e:	51 05       	cpc	r21, r1
 540:	20 f4       	brcc	.+8      	; 0x54a <itoa+0xe>
 542:	42 30       	cpi	r20, 0x02	; 2
 544:	10 f0       	brcs	.+4      	; 0x54a <itoa+0xe>
 546:	0c 94 a9 02 	jmp	0x552	; 0x552 <__itoa_ncheck>
 54a:	fb 01       	movw	r30, r22
 54c:	10 82       	st	Z, r1
 54e:	cb 01       	movw	r24, r22
 550:	08 95       	ret

00000552 <__itoa_ncheck>:
 552:	bb 27       	eor	r27, r27
 554:	4a 30       	cpi	r20, 0x0A	; 10
 556:	31 f4       	brne	.+12     	; 0x564 <__itoa_ncheck+0x12>
 558:	99 23       	and	r25, r25
 55a:	22 f4       	brpl	.+8      	; 0x564 <__itoa_ncheck+0x12>
 55c:	bd e2       	ldi	r27, 0x2D	; 45
 55e:	90 95       	com	r25
 560:	81 95       	neg	r24
 562:	9f 4f       	sbci	r25, 0xFF	; 255
 564:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__utoa_common>

00000568 <__utoa_ncheck>:
 568:	bb 27       	eor	r27, r27

0000056a <__utoa_common>:
 56a:	fb 01       	movw	r30, r22
 56c:	55 27       	eor	r21, r21
 56e:	aa 27       	eor	r26, r26
 570:	88 0f       	add	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	aa 1f       	adc	r26, r26
 576:	a4 17       	cp	r26, r20
 578:	10 f0       	brcs	.+4      	; 0x57e <__utoa_common+0x14>
 57a:	a4 1b       	sub	r26, r20
 57c:	83 95       	inc	r24
 57e:	50 51       	subi	r21, 0x10	; 16
 580:	b9 f7       	brne	.-18     	; 0x570 <__utoa_common+0x6>
 582:	a0 5d       	subi	r26, 0xD0	; 208
 584:	aa 33       	cpi	r26, 0x3A	; 58
 586:	08 f0       	brcs	.+2      	; 0x58a <__utoa_common+0x20>
 588:	a9 5d       	subi	r26, 0xD9	; 217
 58a:	a1 93       	st	Z+, r26
 58c:	00 97       	sbiw	r24, 0x00	; 0
 58e:	79 f7       	brne	.-34     	; 0x56e <__utoa_common+0x4>
 590:	b1 11       	cpse	r27, r1
 592:	b1 93       	st	Z+, r27
 594:	11 92       	st	Z+, r1
 596:	cb 01       	movw	r24, r22
 598:	0c 94 ce 02 	jmp	0x59c	; 0x59c <strrev>

0000059c <strrev>:
 59c:	dc 01       	movw	r26, r24
 59e:	fc 01       	movw	r30, r24
 5a0:	67 2f       	mov	r22, r23
 5a2:	71 91       	ld	r23, Z+
 5a4:	77 23       	and	r23, r23
 5a6:	e1 f7       	brne	.-8      	; 0x5a0 <strrev+0x4>
 5a8:	32 97       	sbiw	r30, 0x02	; 2
 5aa:	04 c0       	rjmp	.+8      	; 0x5b4 <strrev+0x18>
 5ac:	7c 91       	ld	r23, X
 5ae:	6d 93       	st	X+, r22
 5b0:	70 83       	st	Z, r23
 5b2:	62 91       	ld	r22, -Z
 5b4:	ae 17       	cp	r26, r30
 5b6:	bf 07       	cpc	r27, r31
 5b8:	c8 f3       	brcs	.-14     	; 0x5ac <strrev+0x10>
 5ba:	08 95       	ret

000005bc <_exit>:
 5bc:	f8 94       	cli

000005be <__stop_program>:
 5be:	ff cf       	rjmp	.-2      	; 0x5be <__stop_program>
